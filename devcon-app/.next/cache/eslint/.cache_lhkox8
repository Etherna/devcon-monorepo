[{"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\404.tsx":"1","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\account\\index.ts":"2","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\account\\login\\email.ts":"3","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\account\\login\\token.ts":"4","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\account\\login\\web3.ts":"5","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\account\\logout.ts":"6","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\account\\token.ts":"7","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\account\\[id]\\index.ts":"8","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\robots.ts":"9","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\schedule\\index.ts":"10","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\schedule\\u\\[id].tsx":"11","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\schedule\\[id]\\index.ts":"12","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\sitemap.ts":"13","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\tickets\\availability.ts":"14","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\bogota.tsx":"15","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\faq.tsx":"16","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\index.tsx":"17","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\info.tsx":"18","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\login.tsx":"19","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\notifications.tsx":"20","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\schedule\\u\\[id].tsx":"21","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\schedule\\[id].tsx":"22","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\schedule.tsx":"23","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\settings\\email.tsx":"24","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\settings\\index.tsx":"25","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\settings\\username.tsx":"26","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\settings\\wallets.tsx":"27","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\side-events.tsx":"28","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\speakers\\[id].tsx":"29","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\speakers.tsx":"30","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\venue\\floor\\[id].tsx":"31","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\venue\\room-screen\\index.tsx":"32","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\venue\\room-screen\\[id].tsx":"33","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\venue\\[id].tsx":"34","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\venue.tsx":"35","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\_app.tsx":"36","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\_document.tsx":"37","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\_error.tsx":"38","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\_offline.tsx":"39","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\accordion\\Accordion.tsx":"40","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\accordion\\index.ts":"41","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\accordion\\types.ts":"42","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\alert\\Alert.tsx":"43","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\alert\\index.ts":"44","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\button\\Button.tsx":"45","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\button\\index.ts":"46","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\card\\CallToActionCard.tsx":"47","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\card\\Card.tsx":"48","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\card\\index.ts":"49","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\card\\VideoCard.tsx":"50","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\carousel\\Carousel.tsx":"51","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\carousel\\index.ts":"52","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\collapsed-section\\CollapsedSection.tsx":"53","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\collapsed-section\\index.ts":"54","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\dropdown\\Dropdown.tsx":"55","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\dropdown\\index.ts":"56","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\feed\\Feed.tsx":"57","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\feed\\index.ts":"58","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\filter\\Filter.tsx":"59","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\filter\\index.ts":"60","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\filter\\no-results\\index.ts":"61","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\filter\\no-results\\NoResults.tsx":"62","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\flip-card\\FlipCard.tsx":"63","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\flip-card\\index.ts":"64","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\form\\Form.tsx":"65","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\form\\index.ts":"66","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\gallery\\Gallery.tsx":"67","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\gallery\\index.ts":"68","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\horizontal-looper\\HorizontalLooper.tsx":"69","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\horizontal-looper\\index.ts":"70","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\horizontal-scroller\\HorizontalScroller.tsx":"71","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\horizontal-scroller\\index.ts":"72","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\info-icon\\index.ts":"73","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\info-icon\\InfoIcon.tsx":"74","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\input-form\\index.ts":"75","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\input-form\\InputForm.tsx":"76","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\label\\index.ts":"77","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\label\\Label.tsx":"78","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\Copyright.tsx":"79","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\footer\\Footer.tsx":"80","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\footer\\index.ts":"81","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\footer\\Legal.tsx":"82","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\Header.tsx":"83","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\HeaderLogo.tsx":"84","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\index.ts":"85","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\menu\\foldout\\Foldout.tsx":"86","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\menu\\foldout\\index.ts":"87","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\menu\\index.ts":"88","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\menu\\Menu.tsx":"89","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\menu\\navigation\\index.ts":"90","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\menu\\navigation\\Navigation.tsx":"91","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\search\\index.ts":"92","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\search\\Search.tsx":"93","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\strip\\index.ts":"94","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\strip\\language-toggle\\index.ts":"95","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\strip\\language-toggle\\LanguageToggle.tsx":"96","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\strip\\Strip.tsx":"97","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\useNavigationData.ts":"98","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\page\\index.ts":"99","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\page\\Page.tsx":"100","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\link\\index.ts":"101","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\link\\Link.tsx":"102","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\link\\LinkList.tsx":"103","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\list\\index.ts":"104","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\list\\List.tsx":"105","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\loader\\index.ts":"106","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\loader\\Loader.tsx":"107","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\message\\index.ts":"108","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\message\\Message.tsx":"109","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\modal\\index.ts":"110","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\modal\\Modal.tsx":"111","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\newsletter\\index.ts":"112","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\newsletter\\Newsletter.tsx":"113","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\page-hero\\index.ts":"114","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\page-hero\\PageHero.tsx":"115","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\page-hero\\usePageCategory.tsx":"116","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\pagination\\index.ts":"117","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\pagination\\Pagination.tsx":"118","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\scroll-gradient\\index.ts":"119","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\scroll-gradient\\ScrollGradient.tsx":"120","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\sections\\2column\\index.ts":"121","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\sections\\2column\\TwoColumns.tsx":"122","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\sections\\ContentSection.tsx":"123","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\share\\CopyToClipboard.tsx":"124","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\share\\index.ts":"125","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\share\\Share.tsx":"126","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\share\\Tweet.tsx":"127","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\slider\\index.ts":"128","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\slider\\Slider.tsx":"129","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\slider\\SliderVariations.tsx":"130","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\snapshot\\index.ts":"131","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\snapshot\\Snapshot.tsx":"132","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\sort\\index.ts":"133","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\sort\\Sort.tsx":"134","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\swipe-to-scroll\\index.ts":"135","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\swipe-to-scroll\\SwipeToScroll.tsx":"136","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\table\\Table.tsx":"137","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\tabs\\index.ts":"138","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\tabs\\Tabs.tsx":"139","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\tags\\index.ts":"140","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\tags\\Tags.tsx":"141","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\thumbnail-block\\index.ts":"142","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\thumbnail-block\\ThumbnailBlock.tsx":"143","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\tooltip\\index.ts":"144","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\tooltip\\Tooltip.tsx":"145","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\account\\AccountFooter.tsx":"146","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\account\\Login.tsx":"147","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\account\\PrivatePage.tsx":"148","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\account\\settings\\Email.tsx":"149","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\account\\settings\\NotFound.tsx":"150","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\account\\settings\\Username.tsx":"151","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\account\\settings\\Wallet.tsx":"152","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\account\\Settings.tsx":"153","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\app-search\\AppSearch.tsx":"154","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\app-search\\index.ts":"155","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\app-tabs-section\\AppTabsSection.tsx":"156","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\app-tabs-section\\index.ts":"157","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\button-overlay\\ButtonOverlay.tsx":"158","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\button-overlay\\index.tsx":"159","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\dashboard\\Dashboard.tsx":"160","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\dashboard\\index.ts":"161","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\history-tracker\\HistoryTracker.tsx":"162","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\history-tracker\\index.tsx":"163","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\home\\Home.tsx":"164","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\home\\index.ts":"165","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\info\\index.ts":"166","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\info\\Info.tsx":"167","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\Layout.tsx":"168","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\navigation\\AppNav.tsx":"169","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\navigation\\BottomNav.tsx":"170","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\navigation\\index.tsx":"171","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\notifications\\index.tsx":"172","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\notifications\\Notifications.tsx":"173","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\pwa-prompt\\index.ts":"174","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\pwa-prompt\\pwa-utilities.ts":"175","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\pwa-prompt\\PWAPrompt.tsx":"176","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\room-screen\\index.ts":"177","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\room-screen\\RoomScreen.tsx":"178","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\schedule\\DownloadScheduleModal.tsx":"179","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\schedule\\index.tsx":"180","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\schedule\\Schedule.tsx":"181","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\schedule\\ShareScheduleModal.tsx":"182","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\schedule\\views\\List.tsx":"183","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\session\\ArchiveCard.tsx":"184","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\session\\index.ts":"185","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\session\\LivestreamCard.tsx":"186","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\session\\Session.tsx":"187","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\session\\SessionCard.tsx":"188","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\side-events\\index.ts":"189","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\side-events\\SideEventCard.tsx":"190","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\side-events\\SideEvents.tsx":"191","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\speakers\\index.tsx":"192","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\speakers\\SpeakerDetails.tsx":"193","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\speakers\\Speakers.tsx":"194","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\venue\\Floor.tsx":"195","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\venue\\index.tsx":"196","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\venue\\Room.tsx":"197","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\venue\\RoomInfo.tsx":"198","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\venue\\roomlist.tsx":"199","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\venue\\Venue.tsx":"200","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\blog-overview\\BlogOverview.tsx":"201","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\blog-overview\\BlogReel.tsx":"202","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\blog-overview\\index.ts":"203","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\devcon-week\\getNotionDatabase.ts":"204","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\devcon-week\\schedule.tsx":"205","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\dips\\dip\\DIP.tsx":"206","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\dips\\dip\\index.ts":"207","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\dips\\overview\\contribute\\Contribute.tsx":"208","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\dips\\overview\\contribute\\index.ts":"209","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\dips\\overview\\proposals\\index.ts":"210","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\dips\\overview\\proposals\\Proposals.tsx":"211","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\faq\\FAQ.tsx":"212","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\faq\\index.ts":"213","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\faq\\search\\index.ts":"214","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\faq\\search\\Search.tsx":"215","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\about\\About.tsx":"216","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\about\\index.ts":"217","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\add-to-calendar\\AddToCalendar.tsx":"218","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\add-to-calendar\\index.ts":"219","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\ctas\\CallsToAction.tsx":"220","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\ctas\\index.ts":"221","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\hero\\call-to-action\\CallToAction.tsx":"222","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\hero\\call-to-action\\index.ts":"223","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\hero\\Hero.tsx":"224","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\hero\\images\\Rays.tsx":"225","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\hero\\index.ts":"226","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\hero\\polygon-anim\\app.js":"227","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\hero\\polygon-anim\\index.ts":"228","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\hero\\polygon-anim\\lib\\getGeometry.js":"229","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\hero\\polygon-anim\\PolygonAnim.tsx":"230","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\track-list\\index.ts":"231","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\track-list\\TrackList.tsx":"232","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\ipfs\\Banner.tsx":"233","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\ipfs\\index.ts":"234","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\news\\index.ts":"235","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\news\\inline-feed\\News.tsx":"236","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\news\\overview\\index.ts":"237","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\news\\overview\\Overview.tsx":"238","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\news\\page\\NewsPage.tsx":"239","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\seo\\EventMetadata.tsx":"240","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\seo\\index.ts":"241","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\seo\\PWA.tsx":"242","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\seo\\SEO.tsx":"243","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\seo\\Twitter.tsx":"244"},{"size":1269,"mtime":1698751831808,"results":"245","hashOfConfig":"246"},{"size":973,"mtime":1698351096912,"results":"247","hashOfConfig":"246"},{"size":3185,"mtime":1698751831810,"results":"248","hashOfConfig":"246"},{"size":3019,"mtime":1698751831810,"results":"249","hashOfConfig":"246"},{"size":3709,"mtime":1698351096912,"results":"250","hashOfConfig":"246"},{"size":484,"mtime":1698751831811,"results":"251","hashOfConfig":"246"},{"size":2716,"mtime":1698751831812,"results":"252","hashOfConfig":"246"},{"size":2538,"mtime":1698351096911,"results":"253","hashOfConfig":"246"},{"size":428,"mtime":1698351096914,"results":"254","hashOfConfig":"246"},{"size":749,"mtime":1698751831813,"results":"255","hashOfConfig":"246"},{"size":1036,"mtime":1698751831813,"results":"256","hashOfConfig":"246"},{"size":836,"mtime":1698751831812,"results":"257","hashOfConfig":"246"},{"size":1897,"mtime":1698351096914,"results":"258","hashOfConfig":"246"},{"size":548,"mtime":1698351096915,"results":"259","hashOfConfig":"246"},{"size":9807,"mtime":1698751831813,"results":"260","hashOfConfig":"246"},{"size":1478,"mtime":1698351096921,"results":"261","hashOfConfig":"246"},{"size":835,"mtime":1698751831814,"results":"262","hashOfConfig":"246"},{"size":1587,"mtime":1698751831814,"results":"263","hashOfConfig":"246"},{"size":750,"mtime":1698751831815,"results":"264","hashOfConfig":"246"},{"size":683,"mtime":1698751831815,"results":"265","hashOfConfig":"246"},{"size":1833,"mtime":1698751831816,"results":"266","hashOfConfig":"246"},{"size":2414,"mtime":1698751831816,"results":"267","hashOfConfig":"246"},{"size":1915,"mtime":1698751831815,"results":"268","hashOfConfig":"246"},{"size":915,"mtime":1698751831817,"results":"269","hashOfConfig":"246"},{"size":907,"mtime":1698751831817,"results":"270","hashOfConfig":"246"},{"size":803,"mtime":1698751831817,"results":"271","hashOfConfig":"246"},{"size":819,"mtime":1698751831818,"results":"272","hashOfConfig":"246"},{"size":925,"mtime":1698751831818,"results":"273","hashOfConfig":"246"},{"size":1383,"mtime":1698751831819,"results":"274","hashOfConfig":"246"},{"size":2227,"mtime":1698751831818,"results":"275","hashOfConfig":"246"},{"size":1647,"mtime":1698751831820,"results":"276","hashOfConfig":"246"},{"size":1189,"mtime":1698751831821,"results":"277","hashOfConfig":"246"},{"size":1389,"mtime":1698751831821,"results":"278","hashOfConfig":"246"},{"size":1235,"mtime":1698751831820,"results":"279","hashOfConfig":"246"},{"size":2000,"mtime":1698751831820,"results":"280","hashOfConfig":"246"},{"size":1613,"mtime":1698751831809,"results":"281","hashOfConfig":"246"},{"size":1850,"mtime":1698751831809,"results":"282","hashOfConfig":"246"},{"size":1614,"mtime":1698351096908,"results":"283","hashOfConfig":"246"},{"size":1151,"mtime":1698751831810,"results":"284","hashOfConfig":"246"},{"size":1625,"mtime":1698351096474,"results":"285","hashOfConfig":"246"},{"size":65,"mtime":1698351096475,"results":"286","hashOfConfig":"246"},{"size":158,"mtime":1698351096475,"results":"287","hashOfConfig":"246"},{"size":2011,"mtime":1698351096475,"results":"288","hashOfConfig":"246"},{"size":33,"mtime":1685623371612,"results":"289","hashOfConfig":"246"},{"size":1706,"mtime":1698351096476,"results":"290","hashOfConfig":"246"},{"size":35,"mtime":1685623371613,"results":"291","hashOfConfig":"246"},{"size":1348,"mtime":1698751831705,"results":"292","hashOfConfig":"246"},{"size":4400,"mtime":1698751831706,"results":"293","hashOfConfig":"246"},{"size":42,"mtime":1685623371616,"results":"294","hashOfConfig":"246"},{"size":2653,"mtime":1698751831706,"results":"295","hashOfConfig":"246"},{"size":1078,"mtime":1698751831707,"results":"296","hashOfConfig":"246"},{"size":39,"mtime":1685623371618,"results":"297","hashOfConfig":"246"},{"size":4489,"mtime":1698751831707,"results":"298","hashOfConfig":"246"},{"size":104,"mtime":1685623371619,"results":"299","hashOfConfig":"246"},{"size":3833,"mtime":1698351096484,"results":"300","hashOfConfig":"246"},{"size":62,"mtime":1698351096485,"results":"301","hashOfConfig":"246"},{"size":4319,"mtime":1698351096485,"results":"302","hashOfConfig":"246"},{"size":31,"mtime":1685623371621,"results":"303","hashOfConfig":"246"},{"size":11626,"mtime":1698751831708,"results":"304","hashOfConfig":"246"},{"size":104,"mtime":1698351096488,"results":"305","hashOfConfig":"246"},{"size":41,"mtime":1698351096489,"results":"306","hashOfConfig":"246"},{"size":664,"mtime":1698751831709,"results":"307","hashOfConfig":"246"},{"size":570,"mtime":1698751831709,"results":"308","hashOfConfig":"246"},{"size":41,"mtime":1698351096491,"results":"309","hashOfConfig":"246"},{"size":2541,"mtime":1698351096491,"results":"310","hashOfConfig":"246"},{"size":70,"mtime":1698351096491,"results":"311","hashOfConfig":"246"},{"size":1950,"mtime":1698351096492,"results":"312","hashOfConfig":"246"},{"size":36,"mtime":1698351096492,"results":"313","hashOfConfig":"246"},{"size":473,"mtime":1698351096493,"results":"314","hashOfConfig":"246"},{"size":86,"mtime":1698351096493,"results":"315","hashOfConfig":"246"},{"size":6037,"mtime":1698351096494,"results":"316","hashOfConfig":"246"},{"size":59,"mtime":1685623371630,"results":"317","hashOfConfig":"246"},{"size":39,"mtime":1698351096495,"results":"318","hashOfConfig":"246"},{"size":688,"mtime":1698351096495,"results":"319","hashOfConfig":"246"},{"size":58,"mtime":1698351096497,"results":"320","hashOfConfig":"246"},{"size":3761,"mtime":1698751831710,"results":"321","hashOfConfig":"246"},{"size":33,"mtime":1685623371633,"results":"322","hashOfConfig":"246"},{"size":775,"mtime":1685623371632,"results":"323","hashOfConfig":"246"},{"size":347,"mtime":1698351096498,"results":"324","hashOfConfig":"246"},{"size":6413,"mtime":1698751831711,"results":"325","hashOfConfig":"246"},{"size":49,"mtime":1698351096501,"results":"326","hashOfConfig":"246"},{"size":28947,"mtime":1698351096499,"results":"327","hashOfConfig":"246"},{"size":2999,"mtime":1698751831711,"results":"328","hashOfConfig":"246"},{"size":11865,"mtime":1698751831713,"results":"329","hashOfConfig":"246"},{"size":35,"mtime":1685623371637,"results":"330","hashOfConfig":"246"},{"size":1980,"mtime":1698351096503,"results":"331","hashOfConfig":"246"},{"size":37,"mtime":1685623371639,"results":"332","hashOfConfig":"246"},{"size":31,"mtime":1685623371639,"results":"333","hashOfConfig":"246"},{"size":6052,"mtime":1698751831714,"results":"334","hashOfConfig":"246"},{"size":43,"mtime":1685623371640,"results":"335","hashOfConfig":"246"},{"size":7068,"mtime":1698752642956,"results":"336","hashOfConfig":"246"},{"size":35,"mtime":1685623371641,"results":"337","hashOfConfig":"246"},{"size":2653,"mtime":1698351096507,"results":"338","hashOfConfig":"246"},{"size":33,"mtime":1685623371642,"results":"339","hashOfConfig":"246"},{"size":51,"mtime":1698351096509,"results":"340","hashOfConfig":"246"},{"size":668,"mtime":1698351096509,"results":"341","hashOfConfig":"246"},{"size":2302,"mtime":1698351096508,"results":"342","hashOfConfig":"246"},{"size":5827,"mtime":1698751831717,"results":"343","hashOfConfig":"246"},{"size":50,"mtime":1698351096512,"results":"344","hashOfConfig":"246"},{"size":672,"mtime":1698351096511,"results":"345","hashOfConfig":"246"},{"size":70,"mtime":1698351096514,"results":"346","hashOfConfig":"246"},{"size":2786,"mtime":1698751831717,"results":"347","hashOfConfig":"246"},{"size":1548,"mtime":1698751831718,"results":"348","hashOfConfig":"246"},{"size":49,"mtime":1698351096516,"results":"349","hashOfConfig":"246"},{"size":1376,"mtime":1698351096515,"results":"350","hashOfConfig":"246"},{"size":35,"mtime":1685623371647,"results":"351","hashOfConfig":"246"},{"size":1554,"mtime":1698351096516,"results":"352","hashOfConfig":"246"},{"size":37,"mtime":1698351096518,"results":"353","hashOfConfig":"246"},{"size":594,"mtime":1698351096517,"results":"354","hashOfConfig":"246"},{"size":45,"mtime":1685623371649,"results":"355","hashOfConfig":"246"},{"size":4944,"mtime":1698751831719,"results":"356","hashOfConfig":"246"},{"size":43,"mtime":1685623371650,"results":"357","hashOfConfig":"246"},{"size":2127,"mtime":1698351096520,"results":"358","hashOfConfig":"246"},{"size":39,"mtime":1685623371651,"results":"359","hashOfConfig":"246"},{"size":8633,"mtime":1698751831719,"results":"360","hashOfConfig":"246"},{"size":1926,"mtime":1698351096523,"results":"361","hashOfConfig":"246"},{"size":43,"mtime":1685623371652,"results":"362","hashOfConfig":"246"},{"size":2615,"mtime":1698351096523,"results":"363","hashOfConfig":"246"},{"size":51,"mtime":1685623371653,"results":"364","hashOfConfig":"246"},{"size":490,"mtime":1698351096524,"results":"365","hashOfConfig":"246"},{"size":43,"mtime":1685623371655,"results":"366","hashOfConfig":"246"},{"size":1185,"mtime":1698351096525,"results":"367","hashOfConfig":"246"},{"size":1205,"mtime":1698751831719,"results":"368","hashOfConfig":"246"},{"size":1126,"mtime":1698351096525,"results":"369","hashOfConfig":"246"},{"size":33,"mtime":1685623371657,"results":"370","hashOfConfig":"246"},{"size":5887,"mtime":1698351096526,"results":"371","hashOfConfig":"246"},{"size":485,"mtime":1698351096526,"results":"372","hashOfConfig":"246"},{"size":46,"mtime":1685623371659,"results":"373","hashOfConfig":"246"},{"size":3643,"mtime":1698351096527,"results":"374","hashOfConfig":"246"},{"size":1572,"mtime":1698751831720,"results":"375","hashOfConfig":"246"},{"size":39,"mtime":1685623371660,"results":"376","hashOfConfig":"246"},{"size":1187,"mtime":1698751831721,"results":"377","hashOfConfig":"246"},{"size":67,"mtime":1685623371661,"results":"378","hashOfConfig":"246"},{"size":5180,"mtime":1698351096530,"results":"379","hashOfConfig":"246"},{"size":77,"mtime":1698351096532,"results":"380","hashOfConfig":"246"},{"size":5564,"mtime":1698351096531,"results":"381","hashOfConfig":"246"},{"size":3444,"mtime":1698351096533,"results":"382","hashOfConfig":"246"},{"size":31,"mtime":1685623371664,"results":"383","hashOfConfig":"246"},{"size":2786,"mtime":1698351096534,"results":"384","hashOfConfig":"246"},{"size":31,"mtime":1685623371665,"results":"385","hashOfConfig":"246"},{"size":875,"mtime":1698351096535,"results":"386","hashOfConfig":"246"},{"size":50,"mtime":1698351096537,"results":"387","hashOfConfig":"246"},{"size":2310,"mtime":1698751831722,"results":"388","hashOfConfig":"246"},{"size":37,"mtime":1694373248464,"results":"389","hashOfConfig":"246"},{"size":140,"mtime":1694373248464,"results":"390","hashOfConfig":"246"},{"size":1428,"mtime":1698751831723,"results":"391","hashOfConfig":"246"},{"size":8066,"mtime":1698751831723,"results":"392","hashOfConfig":"246"},{"size":708,"mtime":1698751831724,"results":"393","hashOfConfig":"246"},{"size":6133,"mtime":1698751831726,"results":"394","hashOfConfig":"246"},{"size":1485,"mtime":1698751831727,"results":"395","hashOfConfig":"246"},{"size":2488,"mtime":1698751831727,"results":"396","hashOfConfig":"246"},{"size":6054,"mtime":1698751831728,"results":"397","hashOfConfig":"246"},{"size":7959,"mtime":1698751831724,"results":"398","hashOfConfig":"246"},{"size":3894,"mtime":1698351096545,"results":"399","hashOfConfig":"246"},{"size":40,"mtime":1698351096546,"results":"400","hashOfConfig":"246"},{"size":1075,"mtime":1698351096546,"results":"401","hashOfConfig":"246"},{"size":50,"mtime":1698351096547,"results":"402","hashOfConfig":"246"},{"size":1319,"mtime":1698351096547,"results":"403","hashOfConfig":"246"},{"size":49,"mtime":1698351096548,"results":"404","hashOfConfig":"246"},{"size":11964,"mtime":1698751831729,"results":"405","hashOfConfig":"246"},{"size":40,"mtime":1698351096549,"results":"406","hashOfConfig":"246"},{"size":4620,"mtime":1698751831730,"results":"407","hashOfConfig":"246"},{"size":63,"mtime":1698351096549,"results":"408","hashOfConfig":"246"},{"size":7226,"mtime":1698751831730,"results":"409","hashOfConfig":"246"},{"size":31,"mtime":1698351096552,"results":"410","hashOfConfig":"246"},{"size":30,"mtime":1698351096554,"results":"411","hashOfConfig":"246"},{"size":8080,"mtime":1698751831731,"results":"412","hashOfConfig":"246"},{"size":1551,"mtime":1698751831723,"results":"413","hashOfConfig":"246"},{"size":4599,"mtime":1698751831734,"results":"414","hashOfConfig":"246"},{"size":4274,"mtime":1698751831734,"results":"415","hashOfConfig":"246"},{"size":76,"mtime":1698351096556,"results":"416","hashOfConfig":"246"},{"size":67,"mtime":1698351096557,"results":"417","hashOfConfig":"246"},{"size":4932,"mtime":1698751831736,"results":"418","hashOfConfig":"246"},{"size":41,"mtime":1698351096559,"results":"419","hashOfConfig":"246"},{"size":5500,"mtime":1698751831738,"results":"420","hashOfConfig":"246"},{"size":4065,"mtime":1698751831737,"results":"421","hashOfConfig":"246"},{"size":43,"mtime":1698751831740,"results":"422","hashOfConfig":"246"},{"size":10087,"mtime":1698751831739,"results":"423","hashOfConfig":"246"},{"size":3027,"mtime":1698751831740,"results":"424","hashOfConfig":"246"},{"size":39,"mtime":1698351096562,"results":"425","hashOfConfig":"246"},{"size":25787,"mtime":1698751831741,"results":"426","hashOfConfig":"246"},{"size":3016,"mtime":1698751831742,"results":"427","hashOfConfig":"246"},{"size":5882,"mtime":1698751831743,"results":"428","hashOfConfig":"246"},{"size":1045,"mtime":1698751831743,"results":"429","hashOfConfig":"246"},{"size":82,"mtime":1698351096565,"results":"430","hashOfConfig":"246"},{"size":3154,"mtime":1698751831744,"results":"431","hashOfConfig":"246"},{"size":9811,"mtime":1698751831744,"results":"432","hashOfConfig":"246"},{"size":5737,"mtime":1698751831745,"results":"433","hashOfConfig":"246"},{"size":42,"mtime":1698351096569,"results":"434","hashOfConfig":"246"},{"size":3340,"mtime":1698751831747,"results":"435","hashOfConfig":"246"},{"size":7574,"mtime":1698751831747,"results":"436","hashOfConfig":"246"},{"size":103,"mtime":1698351096573,"results":"437","hashOfConfig":"246"},{"size":5688,"mtime":1698751831749,"results":"438","hashOfConfig":"246"},{"size":22837,"mtime":1698751831750,"results":"439","hashOfConfig":"246"},{"size":4971,"mtime":1698751831751,"results":"440","hashOfConfig":"246"},{"size":64,"mtime":1698351096578,"results":"441","hashOfConfig":"246"},{"size":7441,"mtime":1698751831751,"results":"442","hashOfConfig":"246"},{"size":1323,"mtime":1698751831751,"results":"443","hashOfConfig":"246"},{"size":1792,"mtime":1698751831755,"results":"444","hashOfConfig":"246"},{"size":8357,"mtime":1698751831753,"results":"445","hashOfConfig":"246"},{"size":1012,"mtime":1698351096581,"results":"446","hashOfConfig":"246"},{"size":1928,"mtime":1698351096582,"results":"447","hashOfConfig":"246"},{"size":86,"mtime":1685623371703,"results":"448","hashOfConfig":"246"},{"size":4954,"mtime":1698351096584,"results":"449","hashOfConfig":"246"},{"size":34616,"mtime":1698351096586,"results":"450","hashOfConfig":"246"},{"size":4079,"mtime":1698751831757,"results":"451","hashOfConfig":"246"},{"size":29,"mtime":1698751831757,"results":"452","hashOfConfig":"246"},{"size":5326,"mtime":1698751831758,"results":"453","hashOfConfig":"246"},{"size":43,"mtime":1685623371707,"results":"454","hashOfConfig":"246"},{"size":41,"mtime":1685623371708,"results":"455","hashOfConfig":"246"},{"size":6587,"mtime":1698751831759,"results":"456","hashOfConfig":"246"},{"size":2156,"mtime":1698351096591,"results":"457","hashOfConfig":"246"},{"size":29,"mtime":1685623371710,"results":"458","hashOfConfig":"246"},{"size":35,"mtime":1685623371711,"results":"459","hashOfConfig":"246"},{"size":963,"mtime":1698351096593,"results":"460","hashOfConfig":"246"},{"size":1981,"mtime":1698751831760,"results":"461","hashOfConfig":"246"},{"size":54,"mtime":1698351096597,"results":"462","hashOfConfig":"246"},{"size":5379,"mtime":1698751831761,"results":"463","hashOfConfig":"246"},{"size":78,"mtime":1698351096598,"results":"464","hashOfConfig":"246"},{"size":2074,"mtime":1698351096598,"results":"465","hashOfConfig":"246"},{"size":78,"mtime":1698351096599,"results":"466","hashOfConfig":"246"},{"size":1759,"mtime":1698751831762,"results":"467","hashOfConfig":"246"},{"size":47,"mtime":1698351096622,"results":"468","hashOfConfig":"246"},{"size":3892,"mtime":1698751831761,"results":"469","hashOfConfig":"246"},{"size":44702,"mtime":1698351096624,"results":"470","hashOfConfig":"246"},{"size":31,"mtime":1698351096673,"results":"471","hashOfConfig":"246"},{"size":7104,"mtime":1698351096677,"results":"472","hashOfConfig":"246"},{"size":71,"mtime":1698351096682,"results":"473","hashOfConfig":"246"},{"size":4365,"mtime":1698351096684,"results":"474","hashOfConfig":"246"},{"size":2181,"mtime":1698351096674,"results":"475","hashOfConfig":"246"},{"size":66,"mtime":1698351096713,"results":"476","hashOfConfig":"246"},{"size":5309,"mtime":1698751831763,"results":"477","hashOfConfig":"246"},{"size":7202,"mtime":1698351096714,"results":"478","hashOfConfig":"246"},{"size":35,"mtime":1685623371790,"results":"479","hashOfConfig":"246"},{"size":43,"mtime":1685623371791,"results":"480","hashOfConfig":"246"},{"size":3209,"mtime":1698351096716,"results":"481","hashOfConfig":"246"},{"size":43,"mtime":1685623371792,"results":"482","hashOfConfig":"246"},{"size":2956,"mtime":1698351096718,"results":"483","hashOfConfig":"246"},{"size":5358,"mtime":1698351096719,"results":"484","hashOfConfig":"246"},{"size":1651,"mtime":1698351096721,"results":"485","hashOfConfig":"246"},{"size":66,"mtime":1685623371795,"results":"486","hashOfConfig":"246"},{"size":837,"mtime":1698751831763,"results":"487","hashOfConfig":"246"},{"size":3235,"mtime":1698751831764,"results":"488","hashOfConfig":"246"},{"size":754,"mtime":1698351096722,"results":"489","hashOfConfig":"246"},{"filePath":"490","messages":"491","suppressedMessages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11gb6cd",{"filePath":"493","messages":"494","suppressedMessages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","suppressedMessages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"499","messages":"500","suppressedMessages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","suppressedMessages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"505","messages":"506","suppressedMessages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","suppressedMessages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"511","messages":"512","suppressedMessages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"514","messages":"515","suppressedMessages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"517","messages":"518","suppressedMessages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"520","messages":"521","suppressedMessages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"523","messages":"524","suppressedMessages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"526","messages":"527","suppressedMessages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"529","messages":"530","suppressedMessages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","suppressedMessages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"535","messages":"536","suppressedMessages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"538","messages":"539","suppressedMessages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"541","messages":"542","suppressedMessages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"544","messages":"545","suppressedMessages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"547","messages":"548","suppressedMessages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"550","messages":"551","suppressedMessages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"553","messages":"554","suppressedMessages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"556","messages":"557","suppressedMessages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"559","messages":"560","suppressedMessages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","suppressedMessages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"565","messages":"566","suppressedMessages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"568","messages":"569","suppressedMessages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"571","messages":"572","suppressedMessages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"574","messages":"575","suppressedMessages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"577","messages":"578","suppressedMessages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"580","messages":"581","suppressedMessages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"583","messages":"584","suppressedMessages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"586","messages":"587","suppressedMessages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"589","messages":"590","suppressedMessages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"592","messages":"593","suppressedMessages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"595","messages":"596","suppressedMessages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"598","messages":"599","suppressedMessages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"601","messages":"602","suppressedMessages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"604","messages":"605","suppressedMessages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"607","messages":"608","suppressedMessages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"610","messages":"611","suppressedMessages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"613","messages":"614","suppressedMessages":"615","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"616","messages":"617","suppressedMessages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"619","messages":"620","suppressedMessages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"622","messages":"623","suppressedMessages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"625","messages":"626","suppressedMessages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"628","messages":"629","suppressedMessages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"631","messages":"632","suppressedMessages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634"},{"filePath":"635","messages":"636","suppressedMessages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"638","messages":"639","suppressedMessages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"641","messages":"642","suppressedMessages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"644","messages":"645","suppressedMessages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"647","messages":"648","suppressedMessages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"650","messages":"651","suppressedMessages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"653","messages":"654","suppressedMessages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"656","messages":"657","suppressedMessages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"659","messages":"660","suppressedMessages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"662","messages":"663","suppressedMessages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"665","messages":"666","suppressedMessages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"668","messages":"669","suppressedMessages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"671","messages":"672","suppressedMessages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"674","messages":"675","suppressedMessages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"677","messages":"678","suppressedMessages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"680","messages":"681","suppressedMessages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"683","messages":"684","suppressedMessages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"686","messages":"687","suppressedMessages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"689","messages":"690","suppressedMessages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"692","messages":"693","suppressedMessages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"695","messages":"696","suppressedMessages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"698","messages":"699","suppressedMessages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"701","messages":"702","suppressedMessages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"704","messages":"705","suppressedMessages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"707","messages":"708","suppressedMessages":"709","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"710","messages":"711","suppressedMessages":"712","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"713","messages":"714","suppressedMessages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"716","messages":"717","suppressedMessages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"719","messages":"720","suppressedMessages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"722","messages":"723","suppressedMessages":"724","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"725","messages":"726","suppressedMessages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"728","messages":"729","suppressedMessages":"730","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"731","messages":"732","suppressedMessages":"733","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"734","messages":"735","suppressedMessages":"736","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"737","messages":"738","suppressedMessages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"740","messages":"741","suppressedMessages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"743","messages":"744","suppressedMessages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"746","messages":"747","suppressedMessages":"748","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"749","messages":"750","suppressedMessages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"752","messages":"753","suppressedMessages":"754","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"755","messages":"756","suppressedMessages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"758","messages":"759","suppressedMessages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"761","messages":"762","suppressedMessages":"763","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"764","messages":"765","suppressedMessages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"767","messages":"768","suppressedMessages":"769","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"770","messages":"771","suppressedMessages":"772","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"773","messages":"774","suppressedMessages":"775","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"776","messages":"777","suppressedMessages":"778","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"779","messages":"780","suppressedMessages":"781","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"782","messages":"783","suppressedMessages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"785","messages":"786","suppressedMessages":"787","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"788","messages":"789","suppressedMessages":"790","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"791","messages":"792","suppressedMessages":"793","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"794","messages":"795","suppressedMessages":"796","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"797","messages":"798","suppressedMessages":"799","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"800","messages":"801","suppressedMessages":"802","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"803","messages":"804","suppressedMessages":"805","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"806","messages":"807","suppressedMessages":"808","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"809","messages":"810","suppressedMessages":"811","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"812","messages":"813","suppressedMessages":"814","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"815","messages":"816","suppressedMessages":"817","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"818","messages":"819","suppressedMessages":"820","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"821","messages":"822","suppressedMessages":"823","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"824","messages":"825","suppressedMessages":"826","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"827","messages":"828","suppressedMessages":"829","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"830","messages":"831","suppressedMessages":"832","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"833","messages":"834","suppressedMessages":"835","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"836","messages":"837","suppressedMessages":"838","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"839","messages":"840","suppressedMessages":"841","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"842","messages":"843","suppressedMessages":"844","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"845","messages":"846","suppressedMessages":"847","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"848","messages":"849","suppressedMessages":"850","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"851","messages":"852","suppressedMessages":"853","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"854","messages":"855","suppressedMessages":"856","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"857","messages":"858","suppressedMessages":"859","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"860","messages":"861","suppressedMessages":"862","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"863","messages":"864","suppressedMessages":"865","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"866","messages":"867","suppressedMessages":"868","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"869","messages":"870","suppressedMessages":"871","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"872","messages":"873","suppressedMessages":"874","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"875","messages":"876","suppressedMessages":"877","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"878","messages":"879","suppressedMessages":"880","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"881","messages":"882","suppressedMessages":"883","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"884","messages":"885","suppressedMessages":"886","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"887","messages":"888","suppressedMessages":"889","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"890","messages":"891","suppressedMessages":"892","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"893","messages":"894","suppressedMessages":"895","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"896","messages":"897","suppressedMessages":"898","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"899","messages":"900","suppressedMessages":"901","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"902","messages":"903","suppressedMessages":"904","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"905","messages":"906","suppressedMessages":"907","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"908","messages":"909","suppressedMessages":"910","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"911","messages":"912","suppressedMessages":"913","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"914","messages":"915","suppressedMessages":"916","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"917","messages":"918","suppressedMessages":"919","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"920","messages":"921","suppressedMessages":"922","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"923","messages":"924","suppressedMessages":"925","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"926","messages":"927","suppressedMessages":"928","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"929","messages":"930","suppressedMessages":"931","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"932"},{"filePath":"933","messages":"934","suppressedMessages":"935","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"936","messages":"937","suppressedMessages":"938","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"939"},{"filePath":"940","messages":"941","suppressedMessages":"942","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"943","messages":"944","suppressedMessages":"945","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"946","messages":"947","suppressedMessages":"948","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"949","messages":"950","suppressedMessages":"951","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"952"},{"filePath":"953","messages":"954","suppressedMessages":"955","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"956","messages":"957","suppressedMessages":"958","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"959","messages":"960","suppressedMessages":"961","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"962","messages":"963","suppressedMessages":"964","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"965","messages":"966","suppressedMessages":"967","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"968","messages":"969","suppressedMessages":"970","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"971","messages":"972","suppressedMessages":"973","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"974","messages":"975","suppressedMessages":"976","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"977","messages":"978","suppressedMessages":"979","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"980","messages":"981","suppressedMessages":"982","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"983","messages":"984","suppressedMessages":"985","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"986"},{"filePath":"987","messages":"988","suppressedMessages":"989","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"990","messages":"991","suppressedMessages":"992","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"993","messages":"994","suppressedMessages":"995","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"996","messages":"997","suppressedMessages":"998","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"999","messages":"1000","suppressedMessages":"1001","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1002","messages":"1003","suppressedMessages":"1004","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1005","messages":"1006","suppressedMessages":"1007","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1008","messages":"1009","suppressedMessages":"1010","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1011","messages":"1012","suppressedMessages":"1013","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1014","messages":"1015","suppressedMessages":"1016","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1017","messages":"1018","suppressedMessages":"1019","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1020","messages":"1021","suppressedMessages":"1022","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1023","messages":"1024","suppressedMessages":"1025","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1026","messages":"1027","suppressedMessages":"1028","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1029","messages":"1030","suppressedMessages":"1031","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1032","messages":"1033","suppressedMessages":"1034","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1035","messages":"1036","suppressedMessages":"1037","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1038","messages":"1039","suppressedMessages":"1040","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1041","messages":"1042","suppressedMessages":"1043","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1044","messages":"1045","suppressedMessages":"1046","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1047","messages":"1048","suppressedMessages":"1049","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1050","messages":"1051","suppressedMessages":"1052","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1053","messages":"1054","suppressedMessages":"1055","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1056","messages":"1057","suppressedMessages":"1058","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1059","messages":"1060","suppressedMessages":"1061","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1062","messages":"1063","suppressedMessages":"1064","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1065","messages":"1066","suppressedMessages":"1067","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1068","messages":"1069","suppressedMessages":"1070","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1071","messages":"1072","suppressedMessages":"1073","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1074","messages":"1075","suppressedMessages":"1076","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1077","messages":"1078","suppressedMessages":"1079","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1080","messages":"1081","suppressedMessages":"1082","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1083","messages":"1084","suppressedMessages":"1085","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1086","messages":"1087","suppressedMessages":"1088","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1089","messages":"1090","suppressedMessages":"1091","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1092","messages":"1093","suppressedMessages":"1094","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1095","messages":"1096","suppressedMessages":"1097","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1098","messages":"1099","suppressedMessages":"1100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1101","messages":"1102","suppressedMessages":"1103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1104","messages":"1105","suppressedMessages":"1106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1107","messages":"1108","suppressedMessages":"1109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1110"},{"filePath":"1111","messages":"1112","suppressedMessages":"1113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1114","messages":"1115","suppressedMessages":"1116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1117","messages":"1118","suppressedMessages":"1119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1120"},{"filePath":"1121","messages":"1122","suppressedMessages":"1123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1124","messages":"1125","suppressedMessages":"1126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1127","messages":"1128","suppressedMessages":"1129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1130","messages":"1131","suppressedMessages":"1132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1133","messages":"1134","suppressedMessages":"1135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1136","messages":"1137","suppressedMessages":"1138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1139","messages":"1140","suppressedMessages":"1141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1142","messages":"1143","suppressedMessages":"1144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1145","messages":"1146","suppressedMessages":"1147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1148","messages":"1149","suppressedMessages":"1150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1151","messages":"1152","suppressedMessages":"1153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1154","messages":"1155","suppressedMessages":"1156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1157","messages":"1158","suppressedMessages":"1159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1160","messages":"1161","suppressedMessages":"1162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1163","messages":"1164","suppressedMessages":"1165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1166","messages":"1167","suppressedMessages":"1168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1169","messages":"1170","suppressedMessages":"1171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1172","messages":"1173","suppressedMessages":"1174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1175","messages":"1176","suppressedMessages":"1177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1178","messages":"1179","suppressedMessages":"1180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1181","messages":"1182","suppressedMessages":"1183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1184","messages":"1185","suppressedMessages":"1186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1187","messages":"1188","suppressedMessages":"1189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1190","messages":"1191","suppressedMessages":"1192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1193","messages":"1194","suppressedMessages":"1195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1196","messages":"1197","suppressedMessages":"1198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1199","messages":"1200","suppressedMessages":"1201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1202","messages":"1203","suppressedMessages":"1204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1205","messages":"1206","suppressedMessages":"1207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1208","messages":"1209","suppressedMessages":"1210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1211"},{"filePath":"1212","messages":"1213","suppressedMessages":"1214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1215","messages":"1216","suppressedMessages":"1217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1218","messages":"1219","suppressedMessages":"1220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1221","messages":"1222","suppressedMessages":"1223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1224","messages":"1225","suppressedMessages":"1226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1227","messages":"1228","suppressedMessages":"1229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\404.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\account\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\account\\login\\email.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\account\\login\\token.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\account\\login\\web3.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\account\\logout.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\account\\token.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\account\\[id]\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\robots.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\schedule\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\schedule\\u\\[id].tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\schedule\\[id]\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\sitemap.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\api\\tickets\\availability.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\bogota.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\faq.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\index.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\info.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\login.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\notifications.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\schedule\\u\\[id].tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\schedule\\[id].tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\schedule.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\settings\\email.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\settings\\index.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\settings\\username.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\settings\\wallets.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\side-events.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\speakers\\[id].tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\speakers.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\venue\\floor\\[id].tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\venue\\room-screen\\index.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\venue\\room-screen\\[id].tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\venue\\[id].tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\venue.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\_app.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\_document.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\_error.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\pages\\_offline.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\accordion\\Accordion.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\accordion\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\accordion\\types.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\alert\\Alert.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\alert\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\button\\Button.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\button\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\card\\CallToActionCard.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\card\\Card.tsx",["1230","1231"],[],"import React from 'react'\r\nimport { Link } from 'components/common/link'\r\nimport Image from 'next/image'\r\nimport { GetExcerpt } from 'utils/formatting'\r\nimport css from './card.module.scss'\r\nimport IconArrowRight from 'assets/icons/arrow_right.svg'\r\nimport { useTranslations } from 'next-intl'\r\n\r\ninterface CardProps {\r\n  title: string\r\n  titleAsIcon?: React.ReactElement\r\n  description?: string\r\n  imageUrl?: any\r\n  linkUrl?: string\r\n  expandLink?: boolean\r\n  date?: Date\r\n  metadata?: string[]\r\n  customReadMore?: string\r\n  className?: string\r\n  slide?: boolean\r\n  allowDrag?: boolean\r\n  children?: React.ReactNode\r\n}\r\n\r\ninterface BasicCardProps {\r\n  expandLink?: boolean\r\n  linkUrl?: string\r\n  imageUrl?: string\r\n  className?: string\r\n  slide?: boolean\r\n  allowDrag?: boolean\r\n  children?: React.ReactNode\r\n}\r\n\r\n// Card has too many variations to be encapsulated by the default Card export\r\n// For places where we need more customization, you can import BasicCard instead of Card and fill in the contents yourself\r\nexport const BasicCard = React.forwardRef((props: BasicCardProps, ref: any) => {\r\n  let className = css['card']\r\n\r\n  if (props.className) className = `${className} ${props.className}`\r\n  if (props.slide) className = ` ${className} ${css['slide']}`\r\n\r\n  if (props.expandLink && props.linkUrl) {\r\n    return (\r\n      <Link className={className} to={props.linkUrl} ref={ref} allowDrag={props.allowDrag}>\r\n        {props.children}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={className} ref={ref}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n})\r\n\r\nexport const Card = React.forwardRef((props: CardProps, ref: any) => {\r\n  const intl = useTranslations()\r\n\r\n  const link =\r\n    props.expandLink || !props.linkUrl ? (\r\n      props.titleAsIcon || props.title\r\n    ) : (\r\n      <Link className=\"hover-underline\" to={props.linkUrl}>\r\n        {props.titleAsIcon || props.title}\r\n      </Link>\r\n    )\r\n\r\n  const readMore =\r\n    props.expandLink || !props.linkUrl ? (\r\n      <div className={css['read-more']}>\r\n        {intl('readmore')}\r\n        <IconArrowRight />\r\n      </div>\r\n    ) : (\r\n      <Link to={props.linkUrl} className={css['read-more']}>\r\n        <>\r\n          {intl('readmore')}\r\n          <IconArrowRight />\r\n        </>\r\n      </Link>\r\n    )\r\n\r\n  const image = (() => {\r\n    if (!props.imageUrl) return null\r\n\r\n    const isGif = props.imageUrl.src.endsWith('.gif')\r\n\r\n    const isOptimized = typeof props.imageUrl !== 'string'\r\n\r\n    if (isOptimized) {\r\n      return (\r\n        <div className=\"aspect\">\r\n          <div className={css['img-wrapper']}>\r\n            {isGif ? (\r\n              <img src={props.imageUrl.src} alt={props.title} />\r\n            ) : (\r\n              <Image className={css['img']} src={props.imageUrl} alt={props.title} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"aspect\">\r\n        <div className={css['img-wrapper']}>\r\n          {isGif ? (\r\n            <img src={props.imageUrl.src} alt={props.title} />\r\n          ) : (\r\n            <Image\r\n              alt={props.title}\r\n              className={`${css['img']} ${css['not-gatsby']}`}\r\n              src={props.imageUrl}\r\n              objectFit=\"cover\"\r\n              layout=\"fill\"\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  })()\r\n\r\n  let bodyClass = css['body']\r\n\r\n  if (props.linkUrl) bodyClass += ` ${css['with-link']}`\r\n\r\n  const cardContent = (\r\n    <>\r\n      {image}\r\n\r\n      <div className={bodyClass}>\r\n        <p className={css['title']}>{link}</p>\r\n        {props.description && (\r\n          <p className={css['text']} dangerouslySetInnerHTML={{ __html: GetExcerpt(props.description) }} />\r\n        )}\r\n\r\n        <div className={css['bottom-section']}>\r\n          {props.metadata && (\r\n            <div className={css['metadata']}>\r\n              {props.metadata.map((text, index) => (\r\n                <small key={props.title + '_' + index}>{text}</small>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {props.linkUrl && readMore}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n\r\n  let className = ''\r\n\r\n  if (props.expandLink) className = `${css['expand-link']} ${className}`\r\n  if (props.imageUrl) className = `${className} ${css['img']}`\r\n\r\n  return (\r\n    <BasicCard className={className} {...props} ref={ref}>\r\n      {cardContent}\r\n    </BasicCard>\r\n  )\r\n})\r\n","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\card\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\card\\VideoCard.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\carousel\\Carousel.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\carousel\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\collapsed-section\\CollapsedSection.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\collapsed-section\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\dropdown\\Dropdown.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\dropdown\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\feed\\Feed.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\feed\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\filter\\Filter.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\filter\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\filter\\no-results\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\filter\\no-results\\NoResults.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\flip-card\\FlipCard.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\flip-card\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\form\\Form.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\form\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\gallery\\Gallery.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\gallery\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\horizontal-looper\\HorizontalLooper.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\horizontal-looper\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\horizontal-scroller\\HorizontalScroller.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\horizontal-scroller\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\info-icon\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\info-icon\\InfoIcon.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\input-form\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\input-form\\InputForm.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\label\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\label\\Label.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\Copyright.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\footer\\Footer.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\footer\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\footer\\Legal.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\Header.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\HeaderLogo.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\menu\\foldout\\Foldout.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\menu\\foldout\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\menu\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\menu\\Menu.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\menu\\navigation\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\menu\\navigation\\Navigation.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\search\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\search\\Search.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\strip\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\strip\\language-toggle\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\strip\\language-toggle\\LanguageToggle.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\strip\\Strip.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\header\\useNavigationData.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\page\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\layouts\\page\\Page.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\link\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\link\\Link.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\link\\LinkList.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\list\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\list\\List.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\loader\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\loader\\Loader.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\message\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\message\\Message.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\modal\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\modal\\Modal.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\newsletter\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\newsletter\\Newsletter.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\page-hero\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\page-hero\\PageHero.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\page-hero\\usePageCategory.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\pagination\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\pagination\\Pagination.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\scroll-gradient\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\scroll-gradient\\ScrollGradient.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\sections\\2column\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\sections\\2column\\TwoColumns.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\sections\\ContentSection.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\share\\CopyToClipboard.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\share\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\share\\Share.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\share\\Tweet.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\slider\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\slider\\Slider.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\slider\\SliderVariations.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\snapshot\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\snapshot\\Snapshot.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\sort\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\sort\\Sort.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\swipe-to-scroll\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\swipe-to-scroll\\SwipeToScroll.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\table\\Table.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\tabs\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\tabs\\Tabs.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\tags\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\tags\\Tags.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\thumbnail-block\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\thumbnail-block\\ThumbnailBlock.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\tooltip\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\common\\tooltip\\Tooltip.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\account\\AccountFooter.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\account\\Login.tsx",["1232"],[],"import React, { useEffect, useState } from 'react'\r\nimport IconSwirl from 'assets/icons/swirl.svg'\r\nimport css from './login.module.scss'\r\nimport pwaIcon from './pwa-icon.png'\r\nimport footerRoad from './footer-road.png'\r\nimport { Link } from 'components/common/link'\r\nimport { InputForm } from 'components/common/input-form'\r\nimport { Button } from 'components/common/button'\r\nimport IconHelp from 'assets/icons/icon-help.svg'\r\nimport { Tooltip } from 'components/common/tooltip'\r\nimport { isEmail } from 'utils/validators'\r\nimport { useAccountContext } from 'context/account-context'\r\nimport { Alert } from 'components/common/alert'\r\nimport { getSiweMessage } from 'utils/web3'\r\nimport AccountFooter from './AccountFooter'\r\nimport { useRouter } from 'next/router'\r\nimport Image from 'next/image'\r\nimport { AppNav } from 'components/domain/app/navigation'\r\nimport { InfoIcon } from 'components/common/info-icon'\r\nimport Info from 'pages/info'\r\n\r\nexport default function LoginPage() {\r\n  const router = useRouter()\r\n  const [tooltipVisible, setTooltipVisible] = useState(false)\r\n  const accountContext = useAccountContext()\r\n  const [emailSent, setEmailSent] = useState(false)\r\n  const [error, setError] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [nonce, setNonce] = useState('')\r\n  const loggedIn = !!accountContext.account\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      router.push('/' + location?.search)\r\n    }\r\n  }, [router, loggedIn])\r\n\r\n  useEffect(() => {\r\n    async function LoginWithToken() {\r\n      const userAccount = await accountContext.loginToken(Number(router.query.token))\r\n      if (userAccount) {\r\n        router.push({ pathname: '/', query: {} })\r\n      }\r\n      if (!userAccount) {\r\n        setError('Unable to verify your email address.')\r\n      }\r\n    }\r\n\r\n    if (router.query.token) LoginWithToken()\r\n  }, [router.query.token])\r\n\r\n  if (loggedIn) {\r\n    return null\r\n  }\r\n\r\n  const connectWeb3AndLogin = async () => {\r\n    const provider = await accountContext.connectWeb3()\r\n    if (!provider) {\r\n      setError('Unable to connect to Web3 provider')\r\n      return\r\n    }\r\n\r\n    const signer = provider.getSigner()\r\n    const address = await signer.getAddress()\r\n    const token = await accountContext.getToken(address.toLowerCase(), false)\r\n    if (!token) {\r\n      setError('Unable to create verification token')\r\n      return\r\n    }\r\n\r\n    const message = getSiweMessage(address, token)\r\n    setError('Sign the message in your wallet to prove you have access.')\r\n    const signedMessage = await accountContext.signMessage(message, provider)\r\n    if (!signedMessage) {\r\n      setError('Unable to sign message')\r\n      return\r\n    }\r\n\r\n    const userAccount = await accountContext.loginWeb3(\r\n      signedMessage.address.toLowerCase(),\r\n      token.nonce,\r\n      signedMessage.message,\r\n      signedMessage.signature\r\n    )\r\n    if (userAccount) {\r\n      router.push('/')\r\n    }\r\n    if (!userAccount) {\r\n      setError('Unable to login with web3')\r\n    }\r\n  }\r\n\r\n  const connectEmail = async () => {\r\n    if (!isEmail(email)) {\r\n      setError('Please provide a valid email address.')\r\n      return\r\n    } else {\r\n      setError('')\r\n    }\r\n\r\n    setEmailSent(true)\r\n    const token = await accountContext.getToken(email, false)\r\n    if (!token) {\r\n      setEmailSent(false)\r\n      setError('Unable to create verification token')\r\n    }\r\n  }\r\n\r\n  const verifyEmail = async () => {\r\n    const nonceNr = Number(nonce)\r\n    if (isNaN(nonceNr)) {\r\n      setError('Please provide a valid verification code.')\r\n      return\r\n    }\r\n\r\n    const userAccount = await accountContext.loginEmail(email, nonceNr)\r\n    if (userAccount) {\r\n      router.push('/')\r\n    }\r\n    if (!userAccount) {\r\n      setError('Unable to verify your email address.')\r\n    }\r\n  }\r\n\r\n  const resendVerificationEmail = async () => {\r\n    const token = await accountContext.getToken(email, false)\r\n    if (token) {\r\n      setEmailSent(true)\r\n    } else {\r\n      setEmailSent(false)\r\n      setError('Unable to create verification token')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AppNav\r\n        links={[\r\n          {\r\n            title: 'Login',\r\n          },\r\n        ]}\r\n      />\r\n      <div className={css['container']}>\r\n        <div>\r\n          <div className={css['hero']}>\r\n            <div className=\"section\">\r\n              <div className=\"content\">\r\n                {/* Need this layer to have something to position the image relatively to (within the bounds of the parent content div) */}\r\n                <div className={css['hero-content']}>\r\n                  <p className={css['devcon']}>Devcon</p>\r\n                  <p className={css['connect']}>Passport —</p>\r\n                  <p className={css['description']}>Your personalized passport to the Devcon experience.</p>\r\n\r\n                  <Image className={css['logo']} layout=\"raw\" src={pwaIcon} alt=\"App logo\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"section\">\r\n            <div className=\"content\">\r\n              <div className={css['info']}>\r\n                <div className={css['left']}>\r\n                  <IconSwirl className={`${css['swirl-icon']} icon`} />\r\n                </div>\r\n                <p>\r\n                  If this is the first time you&apos;re logging in, <b>Passport</b> will automatically create a new\r\n                  account on your behalf.\r\n                </p>\r\n              </div>\r\n\r\n              <div className={css['alert']}>{error && <Alert type=\"info\" title=\"Info\" message={error} />}</div>\r\n\r\n              {emailSent && (\r\n                <div className={css['email']}>\r\n                  <p className=\"bold\">Email — Confirm your email address</p>\r\n                  <p>We&apos;ve sent a verification code to your email address. Please enter this code on below.</p>\r\n                  <InputForm\r\n                    className={css['input']}\r\n                    placeholder=\"Verification code\"\r\n                    defaultValue={nonce}\r\n                    onChange={value => setNonce(value)}\r\n                    onSubmit={verifyEmail}\r\n                  />\r\n                  <div className={css['actions']}>\r\n                    <Button className={`black`} onClick={verifyEmail}>\r\n                      Verify your email\r\n                    </Button>\r\n                    <span className={css['resend']} role=\"button\" onClick={resendVerificationEmail}>\r\n                      Re-send verification code\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {!emailSent && (\r\n                <>\r\n                  <div className={css['trust-model']}>\r\n                    <p>Choose your Trust model</p>\r\n                    {/* \r\n                    <InfoIcon className={`icon ${css['icon-help']}`}>\r\n                      <div>Hey</div>\r\n                    </InfoIcon> */}\r\n                  </div>\r\n\r\n                  <div className={css['email']}>\r\n                    <p className=\"bold\">Email — Not interested in Web 3 usage</p>\r\n                    <InputForm\r\n                      className={css['input']}\r\n                      placeholder=\"Email\"\r\n                      defaultValue={email}\r\n                      onChange={value => setEmail(value)}\r\n                      onSubmit={connectEmail}\r\n                    />\r\n                    <Button className={`black`} onClick={connectEmail}>\r\n                      Connect with Email\r\n                    </Button>\r\n                  </div>\r\n\r\n                  <div className={css['wallet']}>\r\n                    <p className=\"bold\">Wallet — For Experienced Web 3 Users</p>\r\n                    <Button className={`red ${css['button']}`} onClick={connectWeb3AndLogin}>\r\n                      Sign-in with Ethereum\r\n                    </Button>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <AccountFooter />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\account\\PrivatePage.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\account\\settings\\Email.tsx",["1233"],[],"import React, { useEffect, useState } from 'react'\r\nimport css from './settings.module.scss'\r\nimport { useAccountContext } from 'context/account-context'\r\nimport { Alert } from 'components/common/alert'\r\nimport AccountFooter from '../AccountFooter'\r\nimport { Button } from 'components/common/button'\r\nimport { InputForm } from 'components/common/input-form'\r\nimport { isEmail } from 'utils/validators'\r\nimport NotFound from './NotFound'\r\nimport { useRouter } from 'next/router'\r\nimport { AppNav } from '../../navigation'\r\n\r\nexport default function EmailSettings() {\r\n  const router = useRouter()\r\n  const accountContext = useAccountContext()\r\n  const currentAccount = accountContext.account\r\n  const [email, setEmail] = useState(currentAccount?.email ?? '')\r\n  const [error, setError] = useState('')\r\n  const [emailSent, setEmailSent] = useState(false)\r\n  const [nonce, setNonce] = useState('')\r\n  const [areYouSure, setAreYouSure] = useState(false)\r\n\r\n  useEffect(() => {\r\n    async function UpdateWithToken() {\r\n      const userAccount = await accountContext.loginEmail(email, Number(router.query.token))\r\n      if (userAccount) {\r\n        setEmail(userAccount.email ?? '')\r\n        setError('Email address updated.')\r\n        router.push('/')\r\n      }\r\n      if (!userAccount) {\r\n        setError('Unable to verify your email address.')\r\n      }\r\n    }\r\n\r\n    if (router.query.token) UpdateWithToken()\r\n  }, [router.query.token])\r\n\r\n\r\n  if (!accountContext.account) {\r\n    return <></>\r\n  }\r\n\r\n  const canDelete = accountContext.account?.addresses?.length > 0 && !!accountContext.account.email\r\n  const buttonText = accountContext.account.email ? 'Update Email' : 'Add Email'\r\n\r\n\r\n  const connectEmail = async () => {\r\n    if (!isEmail(email)) {\r\n      setError('Please provide a valid email address.')\r\n      return\r\n    } else {\r\n      setError('')\r\n    }\r\n\r\n    setEmailSent(true)\r\n    const token = await accountContext.getToken(email, true)\r\n    if (!token) {\r\n      setEmailSent(false)\r\n      setError('Unable to create verification token')\r\n    }\r\n  }\r\n\r\n  const verifyEmail = async () => {\r\n    const nonceNr = Number(nonce)\r\n    if (isNaN(nonceNr)) {\r\n      setError('Please provide a valid verification code.')\r\n      return\r\n    }\r\n\r\n    const userAccount = await accountContext.loginEmail(email, nonceNr)\r\n    if (userAccount) {\r\n      router.push('/')\r\n    }\r\n    if (!userAccount) {\r\n      setError('Unable to verify your email address.')\r\n    }\r\n  }\r\n\r\n  const removeEmail = async () => {\r\n    if (!accountContext.account) return\r\n\r\n    await accountContext.updateAccount(accountContext.account._id, { ...accountContext.account, email: undefined })\r\n\r\n    setAreYouSure(false)\r\n    setEmail('')\r\n  }\r\n\r\n  const resendVerificationEmail = async () => {\r\n    setEmailSent(true)\r\n    const token = await accountContext.getToken(email, false)\r\n    if (!token) {\r\n      setEmailSent(false)\r\n      setError('Unable to create verification token')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AppNav\r\n        nested\r\n        links={[\r\n          {\r\n            title: 'Email',\r\n          },\r\n        ]}\r\n      />\r\n\r\n      <div className={css['container']}>\r\n        <div>\r\n          <div className=\"section\">\r\n            <div className=\"content\">\r\n              <div className={css['alert']}>{error && <Alert title='Info' type=\"info\" message={error} />}</div>\r\n\r\n              <div className={css['form']}>\r\n                <p className={`${css['title']} title`}>Manage Email</p>\r\n\r\n                {!accountContext.account.email && (\r\n                  <div className={css['not-found']}>\r\n                    <NotFound type=\"email\" />\r\n                  </div>\r\n                )}\r\n\r\n                {emailSent && (\r\n                  <>\r\n                    <p className={css['content']}>\r\n                      We&apos;ve sent a verification code to your email address. Please enter this code on below.\r\n                    </p>\r\n                    <InputForm\r\n                      className={css['input']}\r\n                      placeholder=\"Verification code\"\r\n                      defaultValue={nonce}\r\n                      onChange={value => setNonce(value)}\r\n                      onSubmit={verifyEmail}\r\n                    />\r\n                    <Button className={`red`} onClick={verifyEmail}>\r\n                      Verify your email\r\n                    </Button>\r\n                    <span className={css['resend']} role=\"button\" onClick={resendVerificationEmail}>\r\n                      Re-send verification code\r\n                    </span>\r\n                  </>\r\n                )}\r\n\r\n                {!emailSent && (\r\n                  <>\r\n                    <InputForm\r\n                      className={css['input']}\r\n                      placeholder=\"Email\"\r\n                      defaultValue={email}\r\n                      onChange={value => setEmail(value)}\r\n                      onSubmit={connectEmail}\r\n                    />\r\n\r\n                    {!areYouSure && (\r\n                      <Button className={`black`} onClick={connectEmail}>\r\n                        {buttonText}\r\n                      </Button>\r\n                    )}\r\n                  </>\r\n                )}\r\n\r\n                {!areYouSure && !emailSent && canDelete && (\r\n                  <Button className={`red ${css['button']}`} onClick={() => setAreYouSure(true)}>\r\n                    Delete Email\r\n                  </Button>\r\n                )}\r\n\r\n                {areYouSure && (\r\n                  <>\r\n                    <p>Are you sure you want to remove your associated email address?</p>\r\n                    <Button className={`black ${css['button']}`} onClick={() => setAreYouSure(false)}>\r\n                      No, keep my email\r\n                    </Button>\r\n                    <Button className={`red ${css['button']}`} onClick={removeEmail}>\r\n                      Yes, delete my email\r\n                    </Button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <AccountFooter />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\account\\settings\\NotFound.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\account\\settings\\Username.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\account\\settings\\Wallet.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\account\\Settings.tsx",["1234"],[],"import React, { useState } from 'react'\r\nimport css from './login.module.scss'\r\nimport { Link, LinkList } from 'components/common/link'\r\nimport { Button } from 'components/common/button'\r\nimport { useAccountContext } from 'context/account-context'\r\nimport { Alert } from 'components/common/alert'\r\nimport { CollapsedSection, CollapsedSectionHeader, CollapsedSectionContent } from 'components/common/collapsed-section'\r\nimport AccountFooter from './AccountFooter'\r\nimport { useAvatar } from 'hooks/useAvatar'\r\nimport { isEmail } from 'utils/validators'\r\nimport { TruncateMiddle } from 'utils/formatting'\r\nimport { useRouter } from 'next/router'\r\nimport { AppNav } from 'components/domain/app/navigation'\r\nimport Toggle from 'react-toggle'\r\nimport { EMAIL_DEVCON } from 'utils/constants'\r\n\r\nexport default function SettingsPage() {\r\n  const router = useRouter()\r\n  const accountContext = useAccountContext()\r\n  const avatar = useAvatar()\r\n  const [areYouSure, setAreYouSure] = useState(false)\r\n  const [error, setError] = useState('')\r\n  const [openTabs, setOpenTabs] = React.useState<any>(\r\n    router.asPath.split('#')[1] ? { [router.asPath.split('#')[1]]: true } : {}\r\n  )\r\n\r\n  const deleteAccount = async () => {\r\n    if (!accountContext.account?._id) {\r\n      setError('Unable to delete account.')\r\n      return\r\n    }\r\n\r\n    await accountContext.deleteAccount(accountContext.account?._id)\r\n  }\r\n\r\n  const toggleScheduleSharing = async () => {\r\n    if (accountContext.account) {\r\n      accountContext.toggleScheduleSharing(accountContext.account)\r\n    }\r\n  }\r\n\r\n  const disconnect = async () => {\r\n    accountContext.logout(accountContext.account?._id)\r\n    router.push('/login')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AppNav\r\n        links={[\r\n          {\r\n            title: 'Settings',\r\n          },\r\n        ]}\r\n      />\r\n      <div className={css['container']}>\r\n        <div>\r\n          <div className=\"section\">\r\n            <div className=\"content\">\r\n              <div className={css['alert']}>{error && <Alert title='Info' type=\"info\" message={error} />}</div>\r\n\r\n              <div className={css['profile']}>\r\n                <div className={css['avatar']}>\r\n                  <img src={avatar.url} alt={avatar.name} />\r\n                </div>\r\n                <p className={`${css['name']} title`}>\r\n                  {accountContext.account?.username\r\n                    ? accountContext.account?.username\r\n                    : isEmail(avatar.name)\r\n                      ? avatar.name\r\n                      : TruncateMiddle(avatar.name, 8)}\r\n                </p>\r\n                <span className={css['signout']} role=\"button\" onClick={disconnect}>\r\n                  Sign out\r\n                </span>\r\n              </div>\r\n\r\n              <CollapsedSection\r\n                open={openTabs['account']}\r\n                setOpen={() => {\r\n                  const isOpen = openTabs['account']\r\n\r\n                  const nextOpenState = {\r\n                    ...openTabs,\r\n                    ['account']: true,\r\n                  }\r\n\r\n                  if (isOpen) {\r\n                    delete nextOpenState['account']\r\n                  }\r\n\r\n                  setOpenTabs(nextOpenState)\r\n                }}\r\n              >\r\n                <CollapsedSectionHeader title=\"Account\" />\r\n                <CollapsedSectionContent>\r\n                  <div className={css['links']}>\r\n                    <LinkList>\r\n                      <Link to=\"/settings/email\">Manage Email</Link>\r\n                      <Link to=\"/settings/wallets\">Manage Wallets</Link>\r\n                      <Link to=\"/settings/username\">Manage Username</Link>\r\n                    </LinkList>\r\n                  </div>\r\n                </CollapsedSectionContent>\r\n              </CollapsedSection>\r\n\r\n              <CollapsedSection\r\n                open={openTabs['schedule']}\r\n                setOpen={() => {\r\n                  const isOpen = openTabs['schedule']\r\n\r\n                  const nextOpenState = {\r\n                    ...openTabs,\r\n                    ['schedule']: true,\r\n                  }\r\n\r\n                  if (isOpen) {\r\n                    delete nextOpenState['schedule']\r\n                  }\r\n\r\n                  setOpenTabs(nextOpenState)\r\n                }}\r\n              >\r\n                <CollapsedSectionHeader title=\"Schedule\" />\r\n                <CollapsedSectionContent>\r\n                  <div className={css['share']}>\r\n                    <p>Public schedule</p>\r\n                    <div className={css['toggle']}>\r\n                      <Toggle\r\n                        defaultChecked={accountContext.account?.appState?.publicSchedule}\r\n                        onChange={toggleScheduleSharing}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {accountContext.account?._id && accountContext.account?.appState?.publicSchedule && (\r\n                    <div className={css['links']}>\r\n                      <LinkList>\r\n                        <Link to={`/schedule/u/${accountContext.account._id}/`}>Personal schedule link</Link>\r\n                      </LinkList>\r\n                    </div>\r\n                  )}\r\n                </CollapsedSectionContent>\r\n              </CollapsedSection>\r\n\r\n              <CollapsedSection\r\n                open={openTabs['application']}\r\n                setOpen={() => {\r\n                  const isOpen = openTabs['application']\r\n\r\n                  const nextOpenState = {\r\n                    ...openTabs,\r\n                    ['application']: true,\r\n                  }\r\n\r\n                  if (isOpen) {\r\n                    delete nextOpenState['application']\r\n                  }\r\n\r\n                  setOpenTabs(nextOpenState)\r\n                }}\r\n              >\r\n                <CollapsedSectionHeader title=\"Application\" />\r\n                <CollapsedSectionContent>\r\n                  <div className={css['links']}>\r\n                    <LinkList>\r\n                      <Link to=\"/info#faq\">FAQ</Link>\r\n                      <Link to={`mailto:${EMAIL_DEVCON}`}>Support</Link>\r\n                    </LinkList>\r\n                  </div>\r\n                </CollapsedSectionContent>\r\n              </CollapsedSection>\r\n\r\n              <CollapsedSection\r\n                open={openTabs['delete']}\r\n                setOpen={() => {\r\n                  const isOpen = openTabs['delete']\r\n\r\n                  const nextOpenState = {\r\n                    ...openTabs,\r\n                    ['delete']: true,\r\n                  }\r\n\r\n                  if (isOpen) {\r\n                    delete nextOpenState['delete']\r\n                  }\r\n\r\n                  setOpenTabs(nextOpenState)\r\n                }}\r\n              >\r\n                <CollapsedSectionHeader title=\"Delete Account\" />\r\n                <CollapsedSectionContent>\r\n                  <div className={css['wallet']}>\r\n                    <p>Once you delete your Devcon account, there is no going back. Tread lightly.</p>\r\n                    {!areYouSure && (\r\n                      <Button className={`red ${css['button']}`} onClick={() => setAreYouSure(true)}>\r\n                        Delete Devcon account\r\n                      </Button>\r\n                    )}\r\n\r\n                    {areYouSure && (\r\n                      <>\r\n                        <Button className={`black ${css['button']}`} onClick={() => setAreYouSure(false)}>\r\n                          No, keep my account\r\n                        </Button>&nbsp;\r\n                        <Button className={`red ${css['button']}`} onClick={deleteAccount}>\r\n                          Yes, delete my account\r\n                        </Button>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </CollapsedSectionContent>\r\n              </CollapsedSection>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <AccountFooter />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\app-search\\AppSearch.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\app-search\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\app-tabs-section\\AppTabsSection.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\app-tabs-section\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\button-overlay\\ButtonOverlay.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\button-overlay\\index.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\dashboard\\Dashboard.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\dashboard\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\history-tracker\\HistoryTracker.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\history-tracker\\index.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\home\\Home.tsx",["1235"],[],"import React from 'react'\r\nimport { SliderStickyNotes } from 'components/common/slider/SliderVariations'\r\nimport { Link } from 'components/common/link'\r\nimport { DropdownVariationDots } from 'components/common/dropdown/Dropdown'\r\nimport { useRouter } from 'next/router'\r\nimport css from './home.module.scss'\r\nimport { useAccountContext } from 'context/account-context'\r\nimport { useActiveAddress } from 'hooks/useActiveAddress'\r\nimport { useAvatar } from 'hooks/useAvatar'\r\nimport { AppNav } from 'components/domain/app/navigation'\r\nimport { useMediaQuery } from 'hooks/useMediaQuery'\r\nimport { TruncateMiddle } from 'utils/formatting'\r\nimport { Dashboard } from 'components/domain/app/dashboard'\r\nimport AppPhones from 'assets/images/app-phones.png'\r\nimport AppLogoColor from 'assets/images/app-logo-color.png'\r\nimport Image from 'next/image'\r\n\r\ntype PageIntroduction = {\r\n  background: any\r\n  title?: string\r\n  backgroundAlt: string\r\n  bodyLeftTitle: string\r\n  bodyLeftText: string\r\n  bodyRightRender?: any\r\n  ctaText: string\r\n  button: {\r\n    text: string\r\n    url: string\r\n  }\r\n}\r\n\r\nexport const PageIntroduction = (props: PageIntroduction) => {\r\n  return (\r\n    <div className={css['page-intro']}>\r\n      <div className={css['background']}>\r\n        <Image src={props.background} layout=\"raw\" alt={props.backgroundAlt} />\r\n      </div>\r\n\r\n      {props.title && <div className=\"app-header clear-bottom-less\">{props.title}</div>}\r\n\r\n      <div className={css['body']}>\r\n        <div className={css['left']}>\r\n          <p className={css['subheader']}>{props.bodyLeftTitle}</p>\r\n          <p className={css['subtext']}>{props.bodyLeftText}</p>\r\n        </div>\r\n        {props.bodyRightRender && <div className={css['right']}>{props.bodyRightRender()}</div>}\r\n      </div>\r\n\r\n      <div className={css['cta']}>\r\n        <p className={css['left']}>{props.ctaText}</p>\r\n        <Link\r\n          to={props.button.url}\r\n          style={{ marginLeft: '8px', flexShrink: '0' }}\r\n          className=\"button red sm text-uppercase\"\r\n        >\r\n          {props.button.text} →\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Home = (props: any) => {\r\n  const router = useRouter()\r\n  const maxWidthTruncate = useMediaQuery(640) // breakpoint-sm\r\n  const accountContext = useAccountContext()\r\n  const activeAddress = useActiveAddress()\r\n  const avatar = useAvatar()\r\n  const loggedIn = !!accountContext.account\r\n  const accountContextOptions = [\r\n    {\r\n      text: 'Settings',\r\n      value: 'Settings',\r\n      onClick: () => {\r\n        router.push('/settings')\r\n      },\r\n    },\r\n  ]\r\n\r\n  if (loggedIn && accountContext.account?.addresses[0]) {\r\n    accountContextOptions.push({\r\n      text: 'View on Etherscan',\r\n      value: 'Etherscan',\r\n      onClick: () => {\r\n        const url = 'https://etherscan.io/address/' + accountContext.account?.addresses[0]\r\n        if (window) window.open(url, '_ blank')\r\n        else router.push(url)\r\n      },\r\n    })\r\n  }\r\n\r\n  if (loggedIn) {\r\n    accountContextOptions.push({\r\n      text: 'Sign out',\r\n      value: 'Signout',\r\n      onClick: () => {\r\n        accountContext.logout(accountContext.account?._id)\r\n        router.push('/login')\r\n      },\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AppNav\r\n        links={[\r\n          {\r\n            title: 'Home',\r\n          },\r\n        ]}\r\n      />\r\n      <div className=\"section no-overflow\">\r\n        {loggedIn && (\r\n          <div className={`${css['account']} border-bottom`}>\r\n            <div className=\"font-xxl font-primary\">\r\n              <h2 className=\"font-primary\">\r\n                Welcome\r\n                {accountContext.account?.username && (\r\n                  <>\r\n                    ,<br />\r\n                    {accountContext.account?.username}\r\n                  </>\r\n                )}\r\n                {!accountContext.account?.username && <> 👋</>}\r\n              </h2>\r\n            </div>\r\n            <div className={css['profile-actions']}>\r\n              <button className=\"label error plain\" onClick={() => router.push('/settings')}>\r\n                SETTINGS\r\n              </button>\r\n              <button className=\"label error plain\" onClick={() => router.push('/settings/wallets')}>\r\n                MANAGE WALLETS\r\n              </button>\r\n              <button className=\"label error plain\" onClick={() => router.push('/settings/email')}>\r\n                MANAGE EMAILS\r\n              </button>\r\n              <button className=\"label error plain\" onClick={() => router.push('/settings/username')}>\r\n                MANAGE USERNAME\r\n              </button>\r\n              <button className=\"label error plain\" onClick={() => router.push('/settings#delete')}>\r\n                DELETE ACCOUNT\r\n              </button>\r\n            </div>\r\n\r\n            <div className={css['dropdown']}>\r\n              <DropdownVariationDots value=\"AccountContext\" onChange={() => {}} options={accountContextOptions} />\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {loggedIn && !!activeAddress && (\r\n          <div className={css['connection-info']}>\r\n            <div className={css['wallet']}>\r\n              <div className={css['circle']}>\r\n                <img src={avatar.url} alt={avatar.name} />\r\n              </div>\r\n\r\n              <div className={css['details']}>\r\n                {avatar.connection && <p className={css['network']}>{avatar.connection}</p>}\r\n                {avatar.name && (\r\n                  <p className={css['wallet-address']}>\r\n                    {maxWidthTruncate && TruncateMiddle(avatar.name, 8)}\r\n                    {!maxWidthTruncate && avatar.name}\r\n                  </p>\r\n                )}\r\n                {avatar.status && (\r\n                  <p className={`${css['connection']} ${css[avatar.status.toLowerCase()]}`}>{avatar.status}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {!loggedIn && (\r\n          <>\r\n            <PageIntroduction\r\n              title=\"Welcome to the Devcon Passport\"\r\n              bodyLeftTitle=\"Mobile First PWA\"\r\n              bodyLeftText=\"Devcon Passport App is designed to be utilized on a mobile device for best user experience, please install as a PWA on your device for best performance.\"\r\n              bodyRightRender={() => {\r\n                return (\r\n                  <div className={css['app-phones']}>\r\n                    <Image\r\n                      src={AppPhones}\r\n                      layout=\"fill\"\r\n                      objectFit=\"contain\"\r\n                      objectPosition=\"right\"\r\n                      width=\"100%\"\r\n                      height=\"100%\"\r\n                      alt=\"Phones showing app preview\"\r\n                    />\r\n                  </div>\r\n                )\r\n              }}\r\n              backgroundAlt=\"Devcon passport logo\"\r\n              background={AppLogoColor}\r\n              ctaText=\"Log in to personalize your schedule, track your favorite speakers, share schedule, and more.\"\r\n              button={{\r\n                text: 'Login',\r\n                url: '/login',\r\n              }}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <Dashboard {...props} />\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\home\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\info\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\info\\Info.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\Layout.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\navigation\\AppNav.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\navigation\\BottomNav.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\navigation\\index.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\notifications\\index.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\notifications\\Notifications.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\pwa-prompt\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\pwa-prompt\\pwa-utilities.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\pwa-prompt\\PWAPrompt.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\room-screen\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\room-screen\\RoomScreen.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\schedule\\DownloadScheduleModal.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\schedule\\index.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\schedule\\Schedule.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\schedule\\ShareScheduleModal.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\schedule\\views\\List.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\session\\ArchiveCard.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\session\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\session\\LivestreamCard.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\session\\Session.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\session\\SessionCard.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\side-events\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\side-events\\SideEventCard.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\side-events\\SideEvents.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\speakers\\index.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\speakers\\SpeakerDetails.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\speakers\\Speakers.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\venue\\Floor.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\venue\\index.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\venue\\Room.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\venue\\RoomInfo.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\venue\\roomlist.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\app\\venue\\Venue.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\blog-overview\\BlogOverview.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\blog-overview\\BlogReel.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\blog-overview\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\devcon-week\\getNotionDatabase.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\devcon-week\\schedule.tsx",["1236"],[],"import React, { useEffect } from 'react'\r\nimport css from './schedule.module.scss'\r\nimport moment from 'moment'\r\nimport momentTZ from 'moment-timezone'\r\nimport ListIcon from 'assets/icons/list.svg'\r\nimport CalendarIcon from 'assets/icons/calendar.svg'\r\nimport PeopleIcon from 'assets/icons/people.svg'\r\nimport ChevronDown from 'assets/icons/chevron-down.svg'\r\nimport ChevronUp from 'assets/icons/chevron-up.svg'\r\nimport AddToCalendarIcon from 'assets/icons/calendar.svg'\r\nimport SwipeToScroll from 'components/common/swipe-to-scroll'\r\nimport { Message } from 'components/common/message'\r\nimport { Link } from 'components/common/link'\r\nimport { Modal } from 'components/common/modal'\r\n// import ScheduleBackground from 'assets/images/schedule-bg.svg'\r\nimport { Dropdown } from 'components/common/dropdown'\r\nimport DevconnectAmsterdam from 'assets/images/amsterdam-logo-with-eth.svg'\r\nimport { useRouter } from 'next/dist/client/router'\r\n// @ts-ignore\r\nimport Toggle from 'react-toggle'\r\nimport { useTranslations } from 'next-intl'\r\n\r\nexport const useDraggableLink = () => {\r\n  const dragging = React.useRef(false)\r\n\r\n  return {\r\n    onMouseDown: () => {\r\n      dragging.current = false\r\n    },\r\n    onMouseMove: () => {\r\n      dragging.current = true\r\n    },\r\n    onClick: (e: React.SyntheticEvent) => {\r\n      e.stopPropagation()\r\n\r\n      if (dragging.current) {\r\n        e.preventDefault()\r\n      }\r\n    },\r\n    draggable: false,\r\n  }\r\n}\r\n\r\nconst sortEvents = (a: any, b: any) => {\r\n  const aStartDay = moment(a.Date.startDate),\r\n    aEndDay = moment(a.Date.endDate),\r\n    aTotalDays = aEndDay.diff(aStartDay, 'days') + 1\r\n  const bStartDay = moment(b.Date.startDate),\r\n    bEndDay = moment(b.Date.endDate),\r\n    bTotalDays = bEndDay.diff(bStartDay, 'days') + 1\r\n\r\n  if (aStartDay.isBefore(bStartDay)) {\r\n    return -1\r\n  } else if (aStartDay.isSame(bStartDay)) {\r\n    if (aTotalDays > bTotalDays) return -1\r\n    if (bTotalDays > aTotalDays) return 1\r\n\r\n    return 0\r\n  } else {\r\n    return 1\r\n  }\r\n}\r\n\r\nconst getEventBoundaries = (events: any) => {\r\n  let min: moment.Moment | undefined, max: moment.Moment | undefined\r\n\r\n  events.forEach((event: any) => {\r\n    const startDay = moment.utc(event.Date.startDate),\r\n      endDay = moment.utc(event.Date.endDate)\r\n\r\n    if (min ? startDay.isBefore(min) : true) min = startDay\r\n    if (max ? endDay.isAfter(max) : true) max = endDay\r\n  })\r\n\r\n  return { min, max }\r\n}\r\n\r\nconst calculateEventDuration = (min: moment.Moment | undefined, max: moment.Moment | undefined) => {\r\n  if (max && min) {\r\n    return max?.diff(min, 'days') + 1\r\n  }\r\n\r\n  return 0\r\n}\r\n\r\nconst htmlEscape = (input: string) => {\r\n  input = input.replace(/&/g, '&amp;')\r\n  input = input.replace(/</g, '&lt;')\r\n  input = input.replace(/>/g, '&gt;')\r\n  return input\r\n}\r\n\r\nconst htmlDecode = (content: string) => {\r\n  let e = document.createElement('div')\r\n  e.innerHTML = content\r\n  return e.childNodes.length === 0 ? '' : (e.childNodes[0].nodeValue as any)\r\n}\r\n\r\nconst leftPadNumber = (number: number) => {\r\n  if (number < 10) {\r\n    return `0${number}`\r\n  }\r\n\r\n  return number\r\n}\r\n\r\n// Confirm time format is consistent e.g. 09:30 or 17:30\r\nconst sanitizeEventTime = (eventTime: string) => {\r\n  if (!eventTime) return null\r\n\r\n  const normalizedEventTime = eventTime.trim()\r\n  const isCorrectFormat = normalizedEventTime.match(/\\d{2}:\\d{2}/) !== null\r\n\r\n  if (isCorrectFormat) {\r\n    const asMoment = moment.duration(normalizedEventTime)\r\n\r\n    return {\r\n      calendarTime: `${leftPadNumber(asMoment.get('hours'))}${leftPadNumber(asMoment.get('minutes'))}${leftPadNumber(\r\n        asMoment.get('seconds')\r\n      )}`,\r\n      normalizedEventTime,\r\n    }\r\n  }\r\n\r\n  return null\r\n}\r\n\r\n// Events have a bunch of date formatting going on, heres a utility to generate them:\r\nconst getFormattedEventData = (event: any, day?: any) => {\r\n  const currentDate = day\r\n  const startDate = moment.utc(event.Date.startDate)\r\n  const endDate = moment.utc(event.Date.endDate)\r\n  const formattedDate = currentDate && currentDate.format('MMM DD')\r\n  const formattedStartDate = startDate.format('MMM DD')\r\n  const formattedEndDate = endDate.format('MMM DD')\r\n  const duration = calculateEventDuration(startDate, endDate)\r\n  const isMultiDayEvent = duration > 1\r\n  const timeOfDayArray = event['Time of Day'] && event['Time of Day'].split(',')\r\n  // If its a multi day event but only one time is specified, we assume that is the time of day for the entire week\r\n  const shouldRepeatTimeOfDay = isMultiDayEvent && timeOfDayArray.length === 1\r\n  const timeOfDayIndex = currentDate ? currentDate.diff(startDate, 'days') : 0\r\n  const timeOfDay = timeOfDayArray && timeOfDayArray[shouldRepeatTimeOfDay ? 0 : timeOfDayIndex]\r\n\r\n  return {\r\n    currentDate,\r\n    startDate,\r\n    endDate,\r\n    formattedDate,\r\n    formattedStartDate,\r\n    formattedEndDate,\r\n    duration,\r\n    isMultiDayEvent,\r\n    shouldRepeatTimeOfDay,\r\n    timeOfDayArray,\r\n    timeOfDayIndex,\r\n    timeOfDay,\r\n  }\r\n}\r\n\r\n// Overall schedule data (for the whole week, as opposed to the individual events)\r\nconst useScheduleData = (events: any) => {\r\n  const scheduleHelpers = React.useMemo(() => {\r\n    const { min, max } = getEventBoundaries(events)\r\n    const scheduleDuration = calculateEventDuration(min, max)\r\n    const sortedEvents = events.slice().sort(sortEvents)\r\n    const eventsByDay = {} as { [key: number]: any[] }\r\n\r\n    // Group events by their dates (including spreading out over multiple days if events are multiday) - makes it easier to work with later, e.g. to check if a given day in the event range actually has events or not\r\n    sortedEvents\r\n      .slice()\r\n      // Turns out reversing the \"timeline view\" sorting algorithm yields good results for multi-day events in list view\r\n      .reverse()\r\n      .forEach((event: any) => {\r\n        const eventBoundaries = getEventBoundaries([event])\r\n        const firstDay = eventBoundaries.min ? eventBoundaries.min.diff(min, 'days') : 0\r\n        const lastDay = eventBoundaries.max ? eventBoundaries.max.diff(min, 'days') + 1 : 1\r\n\r\n        for (let i = firstDay; i < lastDay; i++) {\r\n          const dayIsIndexed = !!eventsByDay[i]\r\n\r\n          if (dayIsIndexed) {\r\n            eventsByDay[i] = [event, ...eventsByDay[i]]\r\n          } else {\r\n            eventsByDay[i] = [event]\r\n          }\r\n        }\r\n      })\r\n\r\n    return {\r\n      sortedEvents,\r\n      events,\r\n      eventsByDay,\r\n      scheduleDuration,\r\n      min,\r\n      max,\r\n    }\r\n  }, [events])\r\n\r\n  return scheduleHelpers\r\n}\r\n\r\n// Utility function for keeping track of placed nodes (used by calendar view algo)\r\nconst createPlacementTracker = () => {\r\n  const occupiedNodes = {} as {\r\n    [key: number]: {\r\n      [key: number]: boolean\r\n    }\r\n  }\r\n\r\n  return {\r\n    occupiedNodes,\r\n    placeItem: (currentRow: number, start: number, duration: number) => {\r\n      const canBePlaced = typeof occupiedNodes?.[currentRow]?.[start] === 'undefined'\r\n\r\n      if (canBePlaced) {\r\n        for (let i = start; i < start + duration; i++) {\r\n          occupiedNodes[currentRow] = {\r\n            ...occupiedNodes[currentRow],\r\n            [i]: true,\r\n          }\r\n        }\r\n\r\n        return true\r\n      }\r\n\r\n      return false\r\n    },\r\n  }\r\n}\r\n\r\n// Timeline view (as opposed to list view)\r\nconst Timeline = (props: any) => {\r\n  const { min, sortedEvents, events: defaultSortEvents, scheduleDuration, eventsByDay } = props\r\n  const placementTracker = createPlacementTracker()\r\n  const [eventModalOpen, setEventModalOpen] = React.useState('')\r\n  const draggableAttributes = useDraggableLink()\r\n  const devconDates = [moment('2022-10-11'), moment('2022-10-12'), moment('2022-10-13'), moment('2022-10-14')]\r\n\r\n  // Virtualizing/precomputing the entire grid before rendering it could simplify it greatly...\r\n  // ...but likely not relevant; a new schedule component will be created soon...\r\n  const truncatedDays = {} as { [key: string]: boolean }\r\n  let totalTruncatedDays = {} as any[]\r\n  // Record the indexes of all truncated events for use in the rendering algorithm\r\n  const truncationsByIndex = [] as number[]\r\n\r\n  const events = sortedEvents.map((event: any, index: number) => {\r\n    const {\r\n      startDate: startDay,\r\n      isMultiDayEvent,\r\n      duration: totalDays,\r\n      timeOfDayArray,\r\n      shouldRepeatTimeOfDay,\r\n    } = getFormattedEventData(event)\r\n    const offsetFromFirstDay = startDay.diff(min, 'days') + 1\r\n    const offsetFromFirstEventInSchedule = startDay.diff(moment.utc(sortedEvents[0].Date.startDate), 'days')\r\n    let subtractDays = truncationsByIndex.reduce((acc, val) => {\r\n      if (val < offsetFromFirstDay) {\r\n        return acc + 1\r\n      }\r\n\r\n      return acc\r\n    }, 0)\r\n\r\n    isNaN(totalTruncatedDays[offsetFromFirstEventInSchedule]) ? 0 : totalTruncatedDays[offsetFromFirstEventInSchedule]\r\n\r\n    // We don't render empty days, so we have to account for that when placing items into our grid - we subtract the empty days prior to the current event, treating them as if they don't exist in the grid\r\n    Array.from(Array(offsetFromFirstEventInSchedule)).forEach((_, index: number) => {\r\n      const emptyDay = !eventsByDay[index]\r\n\r\n      if (emptyDay) subtractDays++\r\n    })\r\n\r\n    const truncatedEventDuration = (() => {\r\n      let truncating = false\r\n      let days = totalDays\r\n\r\n      for (let i = 0; i < totalDays; i++) {\r\n        const currentDayIndex = offsetFromFirstEventInSchedule + i\r\n        const allEventsOnDay = eventsByDay[currentDayIndex]\r\n        const isOnlyEventOnDay = allEventsOnDay.length === 1\r\n\r\n        if (isOnlyEventOnDay) {\r\n          const isDevcon = allEventsOnDay.some((event: any) => event['Stable ID'] === 'Devcon')\r\n\r\n          if (isDevcon) return days\r\n\r\n          if (truncating) {\r\n            days--\r\n\r\n            truncationsByIndex.push(currentDayIndex)\r\n          }\r\n\r\n          truncating = true\r\n        } else {\r\n          truncating = false\r\n        }\r\n      }\r\n\r\n      return days\r\n    })()\r\n\r\n    let currentRow = 1 // css property grid-row starts at 1\r\n\r\n    /*\r\n        1) Place at first available Y value in the start date column, filling in horizontally if multiple days\r\n        2) If the column Y is already occupied (by another event extending into the day), increase column Y by 1, repeat until free space\r\n          note: Horizontally there will always be room, by definition, because we are filling in left to right \r\n        3) Keep track of used grid slots along the way (to allow for step 2)\r\n      */\r\n    while (!placementTracker.placeItem(currentRow, offsetFromFirstDay - subtractDays, truncatedEventDuration)) {\r\n      currentRow++\r\n    }\r\n\r\n    const gridPlacement = {\r\n      gridRow: currentRow + 1, // Add 1 to account for the dates occupying the first row\r\n      gridColumn: `${offsetFromFirstDay - subtractDays} / span ${truncatedEventDuration}`,\r\n      '--eventLength': truncatedEventDuration,\r\n    }\r\n\r\n    return (\r\n      <React.Fragment key={event.Name + offsetFromFirstDay}>\r\n        <div\r\n          className={`${css['event']} ${css[`ID-${event['Stable ID']}`]} ${css[event['Difficulty']]} expand-right`}\r\n          style={gridPlacement}\r\n          {...draggableAttributes}\r\n          onClick={e => {\r\n            draggableAttributes.onClick(e)\r\n\r\n            if (!e.defaultPrevented) {\r\n              setEventModalOpen(event.Name)\r\n            }\r\n          }}\r\n        >\r\n          <div className={css['content']}>\r\n            <div className={css['content-inner']}>\r\n              <div className={css['top']}>\r\n                <p\r\n                  className={`font-xl-em ${event['Stable ID'] === 'Devcon' ? 'font-xxl-em' : ''} bold ${css['title']} ${\r\n                    totalDays === 1 ? css['single-day'] : ''\r\n                  }`}\r\n                >\r\n                  {event.Name}\r\n                </p>\r\n\r\n                {event['Time of Day'] && (\r\n                  <div className={css['when']}>\r\n                    {Array.from(Array(totalDays)).map((_, index: number) => {\r\n                      const time = timeOfDayArray[index]\r\n                      const useDayIndicator = !!timeOfDayArray[1] && totalDays > 1\r\n                      const sameTimeEveryDay = shouldRepeatTimeOfDay && totalDays > 1 && time !== 'FULL DAY'\r\n\r\n                      if (!time) return null\r\n                      if (shouldRepeatTimeOfDay && isMultiDayEvent && index > 0) return null\r\n\r\n                      return null\r\n                    })}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className={css['bottom']}>\r\n                <div className={`${css['organizers']} bold`}>\r\n                  {event['Organizer'] ? event['Organizer'].join(', ') : <p>Organizer</p>}\r\n                </div>\r\n\r\n                <EventMeta event={event} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <LearnMore event={event} open={eventModalOpen === event.Name} close={() => setEventModalOpen('')} />\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {/* <div className={`${css['timeline-background']} clear-vertical`}>\r\n        <ScheduleBackground />\r\n      </div> */}\r\n      <SwipeToScroll /*focusRef={todayRef}*/ noBounds /*scrollIndicatorDirections={{ right: true }}*/>\r\n        <div className={css['timeline']}>\r\n          {events}\r\n\r\n          {Array.from(Array(scheduleDuration)).map((_, index: number) => {\r\n            if (truncatedDays[index]) return null // <div className={css['day']}>Truncated</div>\r\n\r\n            const day = moment.utc(defaultSortEvents[0].Date.startDate).add(index, 'days')\r\n            const date = day.format('MMM DD')\r\n            const noEventsForDay = !eventsByDay[index]\r\n            const now = momentTZ.tz(moment(), 'Europe/Amsterdam')\r\n            const dayIsActive = day.isSame(now, 'day')\r\n            const truncateNDays = (() => {\r\n              const currentEvent = eventsByDay[index] && eventsByDay[index][0]\r\n              let counter = 1\r\n\r\n              if (eventsByDay[index].length > 1) return counter\r\n\r\n              while (\r\n                eventsByDay[counter + index] && // the next day has events\r\n                eventsByDay[counter + index].length === 1 && // there's only one event the next day\r\n                currentEvent === eventsByDay[counter + index][0] && // next days event is the same as the current event\r\n                !devconDates.some(devconDate => devconDate.isSame(day, 'date'))\r\n                // !['Oct 11', 'Oct 12', 'Oct 13', 'Oct 14'].includes(date) // No truncation of the devcon event range\r\n              ) {\r\n                truncatedDays[counter + index] = true\r\n\r\n                counter++\r\n              }\r\n\r\n              return counter\r\n            })()\r\n\r\n            if (noEventsForDay) return null\r\n\r\n            const shouldTruncate = truncateNDays > 1\r\n\r\n            let className = css['day']\r\n\r\n            if (dayIsActive) className += ` ${css['active']}`\r\n\r\n            const weekdays = (() => {\r\n              const firstDay = day.format('ddd')\r\n\r\n              if (shouldTruncate) {\r\n                return `${firstDay} - ${day\r\n                  .clone()\r\n                  .add(truncateNDays - 1, 'days')\r\n                  .format('ddd')}`\r\n              }\r\n\r\n              return firstDay\r\n            })()\r\n\r\n            const isDevcon = (() => {\r\n              return devconDates.some(devconDay => devconDay.isSame(day, 'date'))\r\n            })()\r\n\r\n            if (isDevcon) className += ` ${css['is-devcon']}`\r\n\r\n            return (\r\n              <div className={className} key={index}>\r\n                <p className=\"bold\">{weekdays}</p>\r\n                <p className=\"bold\">\r\n                  {date}{' '}\r\n                  {shouldTruncate &&\r\n                    `- ${day\r\n                      .clone()\r\n                      .add(truncateNDays - 1, 'days')\r\n                      .format('MMM DD')}`}\r\n                </p>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </SwipeToScroll>\r\n    </>\r\n  )\r\n}\r\n\r\nconst EventMeta = (props: any) => {\r\n  return (\r\n    <div className={css['meta']}>\r\n      {props.event['General Size'] && props.event['General Size'].length > 0 && (\r\n        <div className={`font-sm-em`} style={{ display: 'flex', alignItems: 'center' }}>\r\n          <PeopleIcon className={`font-lg-em icon`} />\r\n          &nbsp;{props.event['General Size']}\r\n        </div>\r\n      )}\r\n      {/* {props.event['Difficulty'] && <div className={`font-sm-em ${css['difficulty']}`}>{props.event.Difficulty}</div>} */}\r\n\r\n      <div className={css['categories']}>\r\n        {props.event.Category &&\r\n          props.event.Category.length > 0 &&\r\n          props.event.Category.map((category: any) => {\r\n            return (\r\n              <div key={category} className={`label neutral font-xs-em`}>\r\n                {category}\r\n              </div>\r\n            )\r\n          })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst EventLinks = (props: any) => {\r\n  const [calendarModalOpen, setCalendarModalOpen] = React.useState(false)\r\n  const {\r\n    startDate,\r\n    timeOfDayArray,\r\n    endDate,\r\n    duration: eventDuration,\r\n    isMultiDayEvent,\r\n    event,\r\n    shouldRepeatTimeOfDay,\r\n  } = props\r\n  const start = startDate.clone()\r\n  const end = endDate.clone()\r\n  const firstDay = timeOfDayArray[0]\r\n  const lastDay = timeOfDayArray[timeOfDayArray.length - 1]\r\n\r\n  const { calendarTime: startOfFirstDay } = sanitizeEventTime(firstDay.split('-')[0]) || { calendarTime: '000000' }\r\n  const { calendarTime: endOfLastDay } = sanitizeEventTime(lastDay.split('-')[1]) || { calendarTime: '000000' }\r\n\r\n  const description = (() => {\r\n    let humanReadableTimes: string[] = []\r\n\r\n    const allEventTimesValid = timeOfDayArray.every((time: string, index: number) => {\r\n      const startOfDay = sanitizeEventTime(time.split('-')[0])\r\n      const endOfDay = sanitizeEventTime(time.split('-')[1])\r\n      const timeIsValid = startOfDay && endOfDay\r\n\r\n      if (timeIsValid) {\r\n        const timeOfDay = `${startOfDay.normalizedEventTime} - ${endOfDay.normalizedEventTime}`\r\n\r\n        if (isMultiDayEvent && !shouldRepeatTimeOfDay) {\r\n          humanReadableTimes.push(`Day ${index + 1}: ${timeOfDay}`)\r\n        } else {\r\n          humanReadableTimes.push(`${timeOfDay}`)\r\n        }\r\n      }\r\n\r\n      return timeIsValid\r\n    })\r\n\r\n    if (!allEventTimesValid) return null\r\n\r\n    return `${event['Name']} - ${humanReadableTimes.join(', ')}`\r\n  })()\r\n\r\n  const enableAddToCalendar = description !== null\r\n\r\n  const googleCalUrl = (() => {\r\n    const googleCalUrl = new URL(`https://www.google.com/calendar/render?action=TEMPLATE&ctz=Europe/Amsterdam`)\r\n    // const googleCalUrl = new URL(`https://www.google.com/calendar/render?action=TEMPLATE`)\r\n\r\n    googleCalUrl.searchParams.append('text', `${event.Name}`)\r\n    googleCalUrl.searchParams.append('details', `${description}`)\r\n\r\n    if (event.Location.url) googleCalUrl.searchParams.append('location', `${event.Location.text}`)\r\n\r\n    return googleCalUrl\r\n  })()\r\n\r\n  const ics = [`BEGIN:VCALENDAR`, `PRODID:devconnect.org`, `METHOD:PUBLISH`, `VERSION:2.0`, `CALSCALE:GREGORIAN`]\r\n\r\n  if (isMultiDayEvent) {\r\n    // Have to add a day for multi-day events since the final day is not included in the range\r\n    // (if not, it will make a boundary at exactly midnight on the previous day since the dates default to 00:00 when no time is specified)\r\n    end.add(1, 'days')\r\n\r\n    googleCalUrl.searchParams.append('dates', `${start.format('YYYYMMDD')}/${end.format('YYYYMMDD')}`)\r\n\r\n    ics.push(\r\n      `BEGIN:VEVENT`,\r\n      `UID:${event.Name}`,\r\n      `DTSTAMP:${moment.utc().format('YYYYMMDDTHHmmss')}`,\r\n      `DTSTART:${start.format('YYYYMMDD')}`,\r\n      `DTEND:${end.format('YYYYMMDD')}`,\r\n      `SUMMARY:${event.Name}`,\r\n      `DESCRIPTION:${description}`,\r\n      event.Location.url && `URL;VALUE=URI:${event.Location.url}`,\r\n      event.Location.url && `LOCATION:${event.Location.text}`,\r\n      `END:VEVENT`\r\n    )\r\n  } else {\r\n    googleCalUrl.searchParams.append(\r\n      'dates',\r\n      `${start.format('YYYYMMDD')}T${startOfFirstDay}/${end.format('YYYYMMDD')}T${endOfLastDay}`\r\n    )\r\n\r\n    ics.push(\r\n      `BEGIN:VEVENT`,\r\n      `UID:${event.Name}`,\r\n      `DTSTAMP:${moment.utc().format('YYYYMMDDTHHmmss')}`,\r\n      `DTSTART:${start.format('YYYYMMDD')}T${startOfFirstDay}`,\r\n      `DTEND:${end.format('YYYYMMDD')}T${endOfLastDay}`,\r\n      `SUMMARY:${event.Name}`,\r\n      `DESCRIPTION:${description}`,\r\n      event.Location.url && `URL;VALUE=URI:${event.Location.url}`,\r\n      event.Location.url && `LOCATION:${event.Location.text}`,\r\n      `END:VEVENT`\r\n    )\r\n  }\r\n\r\n  ics.push(`END:VCALENDAR`)\r\n\r\n  const file = new Blob([ics.filter((row: string) => !!row).join('\\n')], { type: 'text/calendar' })\r\n  const icsAttributes = {\r\n    href: URL.createObjectURL(file),\r\n    download: `${event.Name}.ics`,\r\n  }\r\n\r\n  const intl = useTranslations()\r\n\r\n  return (\r\n    <div className={`${css['event-links']} font-sm text-uppercase`}>\r\n      {event.URL && event.URL.length > 0 ? (\r\n        <Link to={event.URL} indicateExternal>\r\n          {intl('devcon_week_visit_website')}\r\n        </Link>\r\n      ) : null}\r\n\r\n      {event.Location && event.Location.url && (\r\n        <Link to={event.Location.url} indicateExternal>\r\n          {intl('devcon_week_location')}\r\n        </Link>\r\n      )}\r\n\r\n      {event['Stream URL'] && (\r\n        <Link to={event['Stream URL']} indicateExternal className=\"button xs orange-fill\">\r\n          {intl('devcon_week_stream')}\r\n        </Link>\r\n      )}\r\n\r\n      {enableAddToCalendar && (\r\n        <>\r\n          <div className={css['add-to-calendar']}>\r\n            <AddToCalendarIcon className={`big-text icon`} onClick={() => setCalendarModalOpen(true)} />\r\n          </div>\r\n\r\n          {calendarModalOpen && (\r\n            <Modal\r\n              className={css['add-to-calendar-modal']}\r\n              open={calendarModalOpen}\r\n              close={() => setCalendarModalOpen(false)}\r\n            >\r\n              <div className={css['add-to-calendar-modal-content']}>\r\n                <p className=\"bold text-uppercase\">Add event to your calendar:</p>\r\n\r\n                <a {...icsAttributes} className=\"button sm font-sm\">\r\n                  Download (.ICS)\r\n                </a>\r\n\r\n                <Link indicateExternal to={googleCalUrl.href} className=\"button sm font-sm\">\r\n                  Google Calendar\r\n                </Link>\r\n              </div>\r\n            </Modal>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst LearnMore = (props: { open: boolean; close: () => void; event: any }) => {\r\n  const intl = useTranslations()\r\n  let className = css['learn-more']\r\n\r\n  return (\r\n    <>\r\n      <div className={`${className} font-xs-em bold`} style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <p>{intl('learn_more')} →</p>\r\n        {props.event['Attend'] && <p className={css['attend-details']}>{props.event['Attend']}</p>}\r\n      </div>\r\n\r\n      <Modal open={props.open} close={props.close} className={css['learn-more-modal']} unstyled>\r\n        <div className={css['learn-more-modal-content']}>\r\n          <ListEventMobile {...getFormattedEventData(props.event)} event={props.event} timeline />\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nconst ListDayHeader = React.forwardRef((props: any, ref: any) => {\r\n  // const [open, setOpen] = React.useState(true)\r\n  const day = props.date.format('dddd')\r\n  const date = props.date.format('MMM DD')\r\n  const now = momentTZ.tz(moment(), 'Europe/Amsterdam')\r\n  const dayIsActive = props.date.isSame(now, 'day')\r\n  const [open, setOpen] = React.useState(dayIsActive)\r\n\r\n  let className = css['day-header']\r\n\r\n  // if (dayIsActive) className += ` ${css['active']}`\r\n  if (open) className += ` ${css['open']}`\r\n\r\n  React.useImperativeHandle(ref, () => {\r\n    return {\r\n      open: () => setOpen(true),\r\n      close: () => setOpen(false),\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div className={className} onClick={() => setOpen(!open)}>\r\n        <div className={css['date']}>\r\n          <p className=\"section-header thin font-lg\">{dayIsActive ? 'TODAY' : day}</p>\r\n          <p className=\"section-header thin font-sm\">{date}</p>\r\n        </div>\r\n\r\n        <div className={css['toggle-open']}>{open ? <ChevronUp /> : <ChevronDown />}</div>\r\n      </div>\r\n      {open && props.children}\r\n    </div>\r\n  )\r\n})\r\n\r\nListDayHeader.displayName = 'ListDayHeader'\r\n\r\nconst ListEventMobile = (props: any) => {\r\n  const { formattedDate, timeOfDay, isMultiDayEvent, formattedStartDate, formattedEndDate } = props\r\n  const intl = useTranslations()\r\n\r\n  return (\r\n    <div className={`${css['event']} ${css[`ID-${props.event['Stable ID']}`]} ${css[props.event['Difficulty']]} `}>\r\n      <div className={css['content']}>\r\n        {props.event.URL ? (\r\n          <Link to={props.event.URL} indicateExternal className={`${css['title']} font-lg text-uppercase bold`}>\r\n            {props.event.Name}\r\n          </Link>\r\n        ) : (\r\n          <p className={`${css['title']} font-lg text-uppercase bold`}>{props.event.Name}</p>\r\n        )}\r\n\r\n        {props.event.Location && props.event.Location.url && (\r\n          <Link\r\n            to={props.event.Location.url}\r\n            indicateExternal\r\n            className={`${css['location']} big-text-bold text-uppercase`}\r\n          >\r\n            {props.event.Location.text}\r\n          </Link>\r\n        )}\r\n\r\n        <div className={css['date']}>\r\n          <p className={`font-sm text-uppercase ${css['time-of-day']}`}>\r\n            {formattedDate} — <br /> <span className=\"font-lg\">{timeOfDay}</span>\r\n            {props.event['Stable ID'] === 'Cowork' && (\r\n              <>\r\n                <br />\r\n                <span className=\"font-sm bold\">Social hours 18:00 - 20:00 🎉</span>\r\n              </>\r\n            )}\r\n          </p>\r\n          {isMultiDayEvent && (\r\n            <p className={`${css['end-date']} font-sm text-uppercase`}>\r\n              {formattedStartDate} — {formattedEndDate}\r\n            </p>\r\n          )}\r\n        </div>\r\n        {isMultiDayEvent && (\r\n          <div className={`label font-xs ${css['multi-day-indicator']}`}>{intl('devcon_week_multi_day_event')}</div>\r\n        )}\r\n        {/* {props.event['Stable ID'] === 'Cowork' && <DevconnectAmsterdam style={{ width: '50px', display: 'block' }} />} */}\r\n        {props.event['Description'] && (\r\n          <p\r\n            className={`${css['description']} font-sm`}\r\n            dangerouslySetInnerHTML={{ __html: htmlDecode(htmlEscape(props.event['Description'])) }}\r\n          />\r\n        )}\r\n\r\n        {/* {props.event['Stable ID'] === 'Easter' && props.timeline && (\r\n          <img src=\"https://c.tenor.com/thDFJno0zuAAAAAd/happy-easter-easter-bunny.gif\" alt=\"Easter egg\" width=\"100%\" />\r\n        )} */}\r\n\r\n        {props.event['Organizer'] && (\r\n          <p className={`text-uppercase ${css['organizers']}`}>{props.event['Organizer'].join(', ')}</p>\r\n        )}\r\n        {props.event['Attend'] &&\r\n          (props.event['URL'] ? (\r\n            <Link\r\n              to={props.event.URL}\r\n              indicateExternal\r\n              className={`${css['ticket-availability']} bold border-top border-bottom purple font-sm text-uppercase`}\r\n            >\r\n              {props.event['Attend']}\r\n            </Link>\r\n          ) : (\r\n            <p className={`${css['ticket-availability']} bold border-top border-bottom purple font-sm text-uppercase`}>\r\n              {props.event['Attend']}\r\n            </p>\r\n          ))}\r\n        <div className={css['bottom']}>\r\n          <EventMeta event={props.event} />\r\n        </div>\r\n      </div>\r\n      <EventLinks {...props} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst useFilter = (events: any) => {\r\n  const keysToFilterOn = ['Category', 'Difficulty', 'Attend']\r\n  const [filters, setFilters] = React.useState({} as { [key: string]: any })\r\n  const filterableValues = {} as { [key: string]: Set<string> }\r\n  const [hideSoldOut, setHideSoldOut] = React.useState(false)\r\n\r\n  // Run through events collecting all the possible values to filter on for the specified keys above - looks a bit messy but w/e\r\n  // Could hardcode the filter values too but this is future proof if someone changes the range of possible values for any of the above fields\r\n  events.forEach((event: any) => {\r\n    keysToFilterOn.forEach((key: any) => {\r\n      const value = event[key]\r\n      if (value) {\r\n        if (!filterableValues[key]) filterableValues[key] = new Set()\r\n\r\n        if (Array.isArray(value)) {\r\n          value.forEach((val: any) => {\r\n            if (!filterableValues[key].has(val)) filterableValues[key].add(val)\r\n          })\r\n        } else {\r\n          if (!filterableValues[key].has(value)) filterableValues[key].add(event[key])\r\n        }\r\n      }\r\n    })\r\n  })\r\n\r\n  const activeFilters = Object.keys(filters)\r\n\r\n  const filteredEvents = events.filter((event: any) => {\r\n    if (hideSoldOut && ['sold out', 'applications closed'].includes(event['Attend'] && event['Attend'].toLowerCase())) {\r\n      return false\r\n    }\r\n\r\n    if (activeFilters.length > 0) {\r\n      return activeFilters.every(key => {\r\n        const activeFilter = filters[key]\r\n\r\n        if (Array.isArray(event[key])) return event[key].includes(activeFilter)\r\n\r\n        return activeFilter === event[key]\r\n      })\r\n    }\r\n\r\n    return true\r\n  })\r\n\r\n  return {\r\n    events: filteredEvents,\r\n    keysToFilterOn,\r\n    filterableValues,\r\n    hideSoldOut,\r\n    setHideSoldOut,\r\n    filters,\r\n    onChange: (key: string, value: string) => {\r\n      const nextFilter = {\r\n        ...filters,\r\n        [key]: value,\r\n      } as { [key: string]: string }\r\n\r\n      if (!value) delete nextFilter[key]\r\n\r\n      setFilters(nextFilter)\r\n    },\r\n  }\r\n}\r\n\r\nconst Filter = (props: any) => {\r\n  return (\r\n    <div className={`${css['filter']} font-sm`}>\r\n      <p className={`${css['filter-text']} bold`}>Filter:</p>\r\n      {props.keysToFilterOn.map((key: string) => {\r\n        const valuesToFilterBy = props.filterableValues[key]\r\n\r\n        if (!valuesToFilterBy) return null\r\n\r\n        return (\r\n          <div key={key} className=\"font-xs\">\r\n            <Dropdown\r\n              placeholder={key}\r\n              value={props.filters[key]}\r\n              onChange={val => props.onChange(key, val)}\r\n              options={Array.from(props.filterableValues[key]).map(filterValue => {\r\n                return {\r\n                  text: filterValue,\r\n                  value: filterValue,\r\n                }\r\n              })}\r\n            />\r\n          </div>\r\n        )\r\n      })}\r\n\r\n      {/* <label className={css['hide-sold-out']}>\r\n        <Toggle defaultChecked={props.hideSoldOut} onChange={() => props.setHideSoldOut(!props.hideSoldOut)} />\r\n        <span>Hide sold out events</span>\r\n      </label> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst scheduleViewHOC = (Component: any) => {\r\n  const ComponentWithScheduleView = (props: any) => {\r\n    const [scheduleView, setScheduleView] = React.useState('timeline')\r\n\r\n    const router = useRouter()\r\n\r\n    useEffect(() => {\r\n      const hash = window.location.hash\r\n\r\n      if (hash && hash === '#list') {\r\n        setScheduleView('list')\r\n        router.replace(router.pathname)\r\n      }\r\n    }, [])\r\n\r\n    return <Component {...props} scheduleView={scheduleView} setScheduleView={setScheduleView} />\r\n  }\r\n\r\n  return ComponentWithScheduleView\r\n}\r\n\r\nconst Schedule = scheduleViewHOC((props: any) => {\r\n  const { scheduleView, setScheduleView } = props\r\n  const { events, ...filterAttributes } = useFilter(props.events)\r\n  const intl = useTranslations()\r\n\r\n  const scheduleHelpers = useScheduleData(events)\r\n  const accordionRefs = React.useRef({} as { [key: string]: any })\r\n\r\n  React.useEffect(() => {\r\n    if (filterAttributes.filters) {\r\n      Object.values(accordionRefs.current).forEach(acc => acc && acc.open && acc.open())\r\n    }\r\n  }, [filterAttributes.filters])\r\n\r\n  return (\r\n    <div className={`${css['schedule']}`} id=\"schedule\">\r\n      <div className=\"fade-in-up clear-vertical\">\r\n        <div className=\"section\">\r\n          <div className={`${css['header-row']}`}>\r\n            <h2 className=\"spaced\">{intl('devcon_week_schedule')}</h2>\r\n            {/* <div className={`${css['view']} font-sm`}>\r\n            <div className={css['options']}>\r\n              <button\r\n                className={`${scheduleView === 'list' && css['selected']} ${css['switch']}`}\r\n                onClick={() => setScheduleView('list')}\r\n              >\r\n                <ListIcon style={{ fontSize: '1.1em' }} />\r\n                <p className={`${css['text']} font-sm`}>List</p>\r\n              </button>\r\n              <button\r\n                className={`${scheduleView === 'timeline' && css['selected']} ${css['switch']}`}\r\n                onClick={() => setScheduleView('timeline')}\r\n              >\r\n                <CalendarIcon />\r\n                <p className={`${css['text']} font-sm`}>Timeline</p>\r\n              </button>\r\n            </div>\r\n          </div> */}\r\n          </div>\r\n\r\n          {/* <Message title=\"Ticket Information\">\r\n          <b>\r\n            EACH event in devconnect is independently hosted and you will require tickets for each event you wish to\r\n            attend.\r\n          </b>\r\n          &nbsp;For information on acquiring tickets to the independently-hosted events during the week of Devconnect\r\n          please visit their respective websites.\r\n        </Message> */}\r\n\r\n          {/* <div className={`${css['top-bar']}`}>\r\n            <Filter events={events} {...filterAttributes} />\r\n            <Expand accordionRefs={accordionRefs} scheduleView={scheduleView} />\r\n\r\n            {scheduleView === 'timeline' && (\r\n              <p className={`font-sm text-uppercase ${css['swipe']}`}>Hold and drag schedule for more →</p>\r\n            )}\r\n          </div> */}\r\n        </div>\r\n\r\n        {events.length === 0 ? (\r\n          <div className={css['no-results']}>\r\n            <p>No matches for this filter</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"section\">\r\n            {/* <div className={`${css['top-bar']}`}>\r\n                <p className={`${css['timezone']} font-sm`}>\r\n                  {momentTZ.tz('Europe/Amsterdam').format('HH:mm')} (UTC/GMT +1)\r\n                </p>\r\n                {scheduleView === 'calendar' && <p className={`font-sm ${css['swipe']}`}>Drag for more →</p>}\r\n              </div> */}\r\n\r\n            {scheduleView === 'timeline' && <Timeline {...scheduleHelpers} />}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Schedule\r\n","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\dips\\dip\\DIP.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\dips\\dip\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\dips\\overview\\contribute\\Contribute.tsx",["1237"],[],"import React from 'react'\r\nimport Github from 'assets/icons/github.svg'\r\nimport css from './contribute.module.scss'\r\nimport { Link } from 'components/common/link'\r\nimport { Contributor } from 'types/DIP'\r\nimport { Tooltip } from 'components/common/tooltip'\r\nimport { useTranslations } from 'next-intl'\r\nimport { chunkArray } from 'utils/chunk-array'\r\nimport Image from 'next/image'\r\nimport { usePageContext } from 'context/page-context'\r\n\r\ntype ContributeProps = {\r\n  contributors: Array<Contributor>\r\n  dipDescription: any\r\n}\r\n\r\ntype ThumbnailProps = {\r\n  contributor: Contributor\r\n}\r\n\r\nconst Thumbnail = ({ contributor }: ThumbnailProps) => {\r\n  return (\r\n    <Tooltip content={contributor.name}>\r\n      <img\r\n        key={contributor.name}\r\n        className={css['thumbnail']}\r\n        alt={`Contributor: ${contributor.name}`}\r\n        src={contributor.avatarUrl}\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n      />\r\n      {/* <div className={css['thumbnail']}>\r\n        <Image\r\n          key={contributor.name}\r\n          className={css['thumbnail']}\r\n          alt={`Contributor: ${contributor.name}`}\r\n          src={contributor.avatarUrl}\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n      </div> */}\r\n    </Tooltip>\r\n  )\r\n}\r\n\r\n/*\r\n  TO FIX: on safari the animated tracks \"flash\" when they reset their animation (happens every 50 seconds so not that significant)\r\n*/\r\nconst AutoScroller = (props: { contributors: Array<Contributor> }) => {\r\n  const [containerSize, setContainerSize] = React.useState(0)\r\n  const cleanupRef = React.useRef<any>()\r\n\r\n  const setRef = React.useCallback(node => {\r\n    if (cleanupRef.current) cleanupRef.current()\r\n    if (!node) return\r\n\r\n    const el = node\r\n\r\n    if (window.ResizeObserver) {\r\n      const observer = new window.ResizeObserver(entries => {\r\n        const entry = entries[0]\r\n\r\n        let size\r\n\r\n        if (entry.contentBoxSize) {\r\n          const borderBoxSize = entry.borderBoxSize[0] || entry.borderBoxSize\r\n          size = borderBoxSize.inlineSize\r\n        } else {\r\n          size = entry.contentRect.width\r\n        }\r\n\r\n        setContainerSize(size)\r\n      })\r\n\r\n      observer.observe(el)\r\n\r\n      cleanupRef.current = () => {\r\n        observer.unobserve(el)\r\n      }\r\n    } else {\r\n      const syncTrackSize = () => {\r\n        const { width } = el.getBoundingClientRect()\r\n\r\n        setContainerSize(width)\r\n      }\r\n\r\n      syncTrackSize()\r\n\r\n      window.addEventListener('resize', syncTrackSize)\r\n\r\n      cleanupRef.current = () => {\r\n        window.removeEventListener('resize', syncTrackSize)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  const maxThumbnailsInView = 6\r\n  const nRows = 3\r\n\r\n  let containerClass = css['scroll-container']\r\n\r\n  const chunkedContributors = chunkArray(props.contributors, nRows)\r\n\r\n  return (\r\n    <div\r\n      key={containerSize === 0 ? 'loading' : containerSize} // Remounting the element when containerSize changes solves a lot of safari edge cases by resetting the CSS animations\r\n      ref={setRef}\r\n      className={containerClass}\r\n      style={\r\n        {\r\n          '--container-size': `${containerSize}px`,\r\n        } as any\r\n      }\r\n    >\r\n      {chunkedContributors.map((contributors, index) => {\r\n        const isOdd = index % 2 !== 0\r\n\r\n        let className = css['track']\r\n\r\n        if (containerSize) className += ` ${css['animate']}` // Have to wait with animating until containerSize is determined - bugs out in Safari otherwise\r\n        if (isOdd) className += ` ${css['odd']} ${css['reverse']}`\r\n\r\n        return (\r\n          <div key={index} className={className}>\r\n            {contributors.map(contributor => {\r\n              return <Thumbnail key={contributor.name} contributor={contributor} />\r\n            })}\r\n            {/* Have to repeat some thumbnails to give the illusion of infinite loop */}\r\n            {contributors.slice(0, maxThumbnailsInView).map(contributor => {\r\n              return <Thumbnail key={contributor.name} contributor={contributor} />\r\n            })}\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Contribute = (props: ContributeProps) => {\r\n  const intl = useTranslations()\r\n  const page = usePageContext()?.current\r\n\r\n  return (\r\n    <section id=\"contribute\" className={css['section']}>\r\n      <p className=\"h3 spaced\">{page?.title ?? intl('dips_contribute')}</p>\r\n\r\n      <div className={css['container']}>\r\n        <div className={css['left-section']}>\r\n          <div\r\n            dangerouslySetInnerHTML={{ __html: props.dipDescription }}\r\n            className={`${css['dip-description']} markdown`}\r\n          />\r\n          <div className={css['links']}>\r\n            <Link to=\"https://forum.devcon.org\" indicateExternal className=\"text-uppercase font-lg bold\">\r\n              {intl('dips_visit_forum')}\r\n            </Link>\r\n            <Link to=\"https://github.com/efdevcon/DIPs\" indicateExternal className=\"text-uppercase font-lg bold\">\r\n              {intl('dips_create_proposal')}\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className={css['contributors']}>\r\n          <AutoScroller contributors={props.contributors} />\r\n          <div className={css['info']}>\r\n            <p>* {intl('dips_contributors')}</p> <Github />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\dips\\overview\\contribute\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\dips\\overview\\proposals\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\dips\\overview\\proposals\\Proposals.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\faq\\FAQ.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\faq\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\faq\\search\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\faq\\search\\Search.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\about\\About.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\about\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\add-to-calendar\\AddToCalendar.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\add-to-calendar\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\ctas\\CallsToAction.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\ctas\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\hero\\call-to-action\\CallToAction.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\hero\\call-to-action\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\hero\\Hero.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\hero\\images\\Rays.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\hero\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\hero\\polygon-anim\\app.js",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\hero\\polygon-anim\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\hero\\polygon-anim\\lib\\getGeometry.js",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\hero\\polygon-anim\\PolygonAnim.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\track-list\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\index\\track-list\\TrackList.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\ipfs\\Banner.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\ipfs\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\news\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\news\\inline-feed\\News.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\news\\overview\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\news\\overview\\Overview.tsx",["1238"],[],"import React from 'react'\r\nimport { Feed } from 'components/common/feed'\r\nimport { NewsItem } from 'types/NewsItem'\r\nimport { useTranslations } from 'next-intl'\r\nimport moment from 'moment'\r\n// import css from './overview.module.scss'\r\n// import { usePageContext } from 'context/page-context'\r\n// import { Link } from 'components/common/link'\r\n\r\ntype NewsOverviewProps = {\r\n  newsItems: NewsItem[]\r\n}\r\n\r\n// const PrevNext = () => {\r\n//   const context = usePageContext()\r\n\r\n//   const { currentPage, numPages, lang }: any = context.pageContext\r\n//   const isFirst = currentPage === 1\r\n//   const isSecond = currentPage === 2\r\n//   const isLast = currentPage === numPages\r\n//   const prevPage = isSecond ? `/${lang}/news/` : `/${lang}/news/${currentPage - 1}`\r\n//   const nextPage = `/${lang}/news/${currentPage + 1}`\r\n\r\n//   return (\r\n//     <div className={css['pagination-buttons']}>\r\n//       {!isFirst && (\r\n//         <Link to={prevPage} className=\"button\">\r\n//           ← Previous Page\r\n//         </Link>\r\n//       )}\r\n//       {!isLast && (\r\n//         <Link to={nextPage} className=\"button\">\r\n//           Next Page →\r\n//         </Link>\r\n//       )}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nexport const NewsOverview = (props: NewsOverviewProps) => {\r\n  const intl = useTranslations()\r\n  const { newsItems } = props\r\n\r\n  const filterItems = React.useMemo(() => {\r\n    const tags = {} as { [key: string]: any }\r\n\r\n    newsItems.forEach(newsItem => {\r\n      newsItem?.tags?.forEach(tag => {\r\n        if (!tags[tag.id])\r\n          tags[tag.id] = {\r\n            text: tag.title,\r\n            value: tag.id,\r\n          }\r\n      })\r\n    })\r\n\r\n    return [{ text: intl('all'), value: 'all' }].concat(Object.values(tags))\r\n  }, [newsItems])\r\n\r\n  return (\r\n    <>\r\n      <Feed\r\n        title={intl('devcon_updates')}\r\n        items={newsItems as any[]}\r\n        sortOptions={{\r\n          options: [\r\n            {\r\n              text: intl('recent'),\r\n              value: 'recent',\r\n            },\r\n            {\r\n              text: intl('oldest'),\r\n              value: 'oldest',\r\n            },\r\n          ],\r\n          sort: (items: any[], sortBy: string) => {\r\n            return items.sort((a, b) => {\r\n              if (a.date < b.date) {\r\n                return sortBy === 'recent' ? 1 : -1\r\n              } else if (a.date === b.date) {\r\n                return 0\r\n              } else {\r\n                return sortBy === 'recent' ? -1 : 1\r\n              }\r\n            })\r\n          },\r\n        }}\r\n        filterOptions={{\r\n          filters: filterItems,\r\n          filterFunction: activeFilter => {\r\n            return !activeFilter || activeFilter === 'all'\r\n              ? newsItems\r\n              : newsItems.filter(newsItem => {\r\n                  return newsItem?.tags?.some(tag => tag.id.toLowerCase() === activeFilter.toLowerCase())\r\n                })\r\n          },\r\n        }}\r\n      />\r\n\r\n      {/* <PrevNext /> */}\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\news\\page\\NewsPage.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\seo\\EventMetadata.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\seo\\index.ts",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\seo\\PWA.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\seo\\SEO.tsx",[],[],"C:\\Users\\lasse\\OneDrive\\Skrivebord\\projects\\ef\\monorepo\\devcon-app\\src\\components\\domain\\seo\\Twitter.tsx",[],[],{"ruleId":"1239","severity":1,"message":"1240","line":97,"column":15,"nodeType":"1241","endLine":97,"endColumn":65},{"ruleId":"1239","severity":1,"message":"1240","line":110,"column":13,"nodeType":"1241","endLine":110,"endColumn":63},{"ruleId":"1242","severity":1,"message":"1243","line":50,"column":6,"nodeType":"1244","endLine":50,"endColumn":26,"suggestions":"1245"},{"ruleId":"1242","severity":1,"message":"1246","line":37,"column":6,"nodeType":"1244","endLine":37,"endColumn":26,"suggestions":"1247"},{"ruleId":"1239","severity":1,"message":"1240","line":64,"column":19,"nodeType":"1241","endLine":64,"endColumn":61},{"ruleId":"1239","severity":1,"message":"1240","line":155,"column":17,"nodeType":"1241","endLine":155,"endColumn":59},{"ruleId":"1242","severity":1,"message":"1248","line":900,"column":8,"nodeType":"1244","endLine":900,"endColumn":10,"suggestions":"1249"},{"ruleId":"1239","severity":1,"message":"1240","line":24,"column":7,"nodeType":"1241","endLine":31,"endColumn":9},{"ruleId":"1242","severity":1,"message":"1250","line":58,"column":6,"nodeType":"1244","endLine":58,"endColumn":17,"suggestions":"1251"},"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'accountContext' and 'router'. Either include them or remove the dependency array.","ArrayExpression",["1252"],"React Hook useEffect has missing dependencies: 'accountContext', 'email', and 'router'. Either include them or remove the dependency array.",["1253"],"React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.",["1254"],"React Hook React.useMemo has a missing dependency: 'intl'. Either include it or remove the dependency array.",["1255"],{"desc":"1256","fix":"1257"},{"desc":"1258","fix":"1259"},{"desc":"1260","fix":"1261"},{"desc":"1262","fix":"1263"},"Update the dependencies array to be: [accountContext, router, router.query.token]",{"range":"1264","text":"1265"},"Update the dependencies array to be: [accountContext, email, router, router.query.token]",{"range":"1266","text":"1267"},"Update the dependencies array to be: [router]",{"range":"1268","text":"1269"},"Update the dependencies array to be: [intl, newsItems]",{"range":"1270","text":"1271"},[1857,1877],"[accountContext, router, router.query.token]",[1411,1431],"[accountContext, email, router, router.query.token]",[31249,31251],"[router]",[1722,1733],"[intl, newsItems]"]