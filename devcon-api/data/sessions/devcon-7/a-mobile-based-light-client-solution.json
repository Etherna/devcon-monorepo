{
  "id": "a-mobile-based-light-client-solution",
  "sourceId": "7GAKDX",
  "title": "A mobile-based light-client solution",
  "description": "After PoS Merge, there was a bit of a lag in Light-client related work. In response, we developed a mobile-based Light-client to help more devices natively join the Ethernet network.",
  "track": "Core Protocol",
  "type": "Lightning Talk",
  "expertise": "Intermediate",
  "audience": "Engineering",
  "featured": false,
  "doNotRecord": false,
  "tags": [
    "Core Protocol",
    "Light Clients",
    "Tooling",
    "DePIN",
    "Mobile",
    "client",
    "mobile-based",
    "light",
    "Core Protocol",
    "DePIN",
    "Light Clients",
    "Mobile",
    "Tooling"
  ],
  "keywords": [
    "Mobile-based",
    "light",
    "client"
  ],
  "duration": 547,
  "language": "en",
  "sources_swarmHash": "",
  "sources_youtubeId": "JQOfe-NUvKI",
  "sources_ipfsHash": "",
  "sources_livepeerId": "",
  "sources_streamethId": null,
  "transcript_vtt": "https://streameth-develop.ams3.digitaloceanspaces.com/transcriptions/673420c89dbb7a90e1721446.vtt",
  "transcript_text": " I'm so glad to be here and today I would like to share about our current work named Mobi, a mobile-based light client. I'm Suyuan Han and partner of the ABC Labs. So ABC is not just a venture capital, we are always making our hands dirty before we make the investment. So that's a part of the investment strategy. So this work is powered by ABC and Sysic. Sysic is another company which are doing a really good job on ZK hardware acceleration. They will help us to build a more efficient stateless-like client. So the entire blockchain community is founded on one core principle. Don't trust, verify. This principle serves as a foundation pillar for the architecture of the blockchain networks. So, after the POS, so the Ethereum officially posted their Lite client works, but fortunately several third-party teams are initiating their own implementations, such as Nimbus, based on NIM, and Lowstar, based on the TypeScript, and Helios, based on the Rust. So, however, none of the LiteClient solutions cognitively run on the most ubiquitous devices, the mobile phone, right? And so, our goal is quite simple. We are working on to offer to Ethereum community alternative, a light client can run any mobile devices. So the motivation. So why this is technically feasible? So as 2024, the performance of edge devices has advanced significantly. We are already seeing some developers running local RM on their mobiles. And running a light client on the mobiles only require periodically network communication and some storage. So therefore, running an Ethereum light client on the mobile is entirely feasible. So how to make it happen? So our goal is not to build something new, and we want to build SDK for the native running Lite client for the mobile platform, especially for the Android. So we don't want to build something already happened. So the whole architecture is based on the very efficient library called Helios, created by X6D. And Helios is based on Rust, and what we are doing here is to make a cutlery wrap, and to make it as a library for the Android. So our secondary goal is after achieving",
  "eventId": "devcon-7",
  "slot_start": 1731468600000,
  "slot_end": 1731469200000,
  "slot_roomId": "stage-4",
  "resources_presentation": "https://docs.google.com/presentation/d/1IlPTrpB8SK9bkKystbWnIBPtxOnZNnAAkKebg5A6o9U",
  "resources_slides": null,
  "speakers": [
    "hsyodyssey"
  ]
}