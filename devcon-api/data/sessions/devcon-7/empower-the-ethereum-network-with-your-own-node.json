{
  "id": "empower-the-ethereum-network-with-your-own-node",
  "sourceId": "RAXURS",
  "title": "Empower the Ethereum Network with your own node",
  "description": "Stereum is an easy to use MIT-licensed Open Source GUI open-source Node Setup & Management Software.\r\nAfter a couple of clicks you have your hardware set up for  \r\n1) Solo Staking (MEV)\r\n2) Distributed Validator Staking(Obol, SSV)\r\n3) running an Archive Node \r\n4) node operation of several protocols (SSV Network, CSM and Simple DVTM)\r\nWe want to make a workshop, where you can tryout a setup yourself and take time for your questions. dApps, testnet-mainnet switch and client-diversity supported!",
  "track": "Usability",
  "type": "Workshop",
  "expertise": "Beginner",
  "audience": "Stakers/Validators",
  "featured": false,
  "doNotRecord": false,
  "tags": [
    "Staking",
    "Best Practices",
    "Accessibility",
    "network",
    "access",
    "Accessibility",
    "Best Practices",
    "Staking"
  ],
  "keywords": [
    "Ethereum Node",
    "Tooling",
    "Network Access"
  ],
  "duration": 4470,
  "language": "en",
  "sources_swarmHash": "",
  "sources_youtubeId": "cAsztMfLfF0",
  "sources_ipfsHash": "",
  "sources_livepeerId": "",
  "sources_streamethId": null,
  "transcript_vtt": "https://streameth-develop.ams3.digitaloceanspaces.com/transcriptions/67342cb69dbb7a90e1c1a7f6.vtt",
  "transcript_text": " Good morning everybody. I'm Stefan Kobroth. I'm the founder of Styrium and RockLogic and we will do a workshop together to set up an Ethereum node with different kinds of services. First of all some facts about us. RockLogic was founded in 2012, not actually as a blockchain company but an IT infrastructure company, DevOps company. We develop Styrium since 2020. So already before the genesis of proof of stake of Styrium happened, we started with the development. We're an institutional node operator, so we use Styrium also for our own operations, which include the staking efforts in Lido. We already performed a couple of security audits for Stereo to ensure that everything is running fine and we don't overlook some major security vulnerabilities. We also won some awards. I guess the most recognizing, at least in Austria, is the Austrian Blockchain Award 2021. And this year we founded a separate company for this great product. And also this year we launched Styrium Plus, which is an addition to Styrium, a hosting service that you don't need to care anymore about where you get your own machine for Styrium. So some use cases for Styrium itself. Styrium is open source. Everybody can look at the source, of course. And everybody can use it in whatever way they want to. It's MIT licensed. It means you can also fork it, rebrand it, whatever you like to do with the source code. It's up to you. Some use cases, of course, are staking. We, as mentioned, use it for ourselves, for our own operations with Lido and other protocols. There are also protocol node operations for Oido and other protocols. There are also protocol node operations for OBL and SSV, so it's very easy with Styrium to set up a Lido CSM operator as well as OBL or SSV operators. Then it's also possible that you run your own clusters with OBL and SSV. In case you don't know, OBL and SSV are DVTs, distributed validator technologies, that help you spread one key, one validator key, over multiple servers to ensure more reliability, more resilience to technical issues or other issues that you might face. Of course, you can also use Stereo as an RPC node. Maybe some of you guys already use Infura or some other RPC provider, and you know that you're limited with them. But with your own node, you're basically just limited by the hardware you're putting Styrium onto. We have users that run arbitrage bots on it. We have users that run connector metamask on it. That's pretty easy and will be explained also later. Of course, you can start developing your own decentralized app with Styrium because you have the full range of RPC requests that you can use. As well, of course, as WebSocket. And of course, Stereo runs everything you want to. You're not limited to the stuff that we provide you. You can also come up with custom services that you integrate pretty easily. That will be also explained a little bit later on. As you may know, Ethereum has multiple clients. First of all, we have execution clients and consensus clients. Both clients are needed to ensure that you can run a full node or an archive node. We support most of the recent clients, most of the major clients. We also look always into some smaller clients, but up until right now, they were a little bit too unstable to integrate. And we want to make sure that the user has a seamless experience in running an Ethereum node. So how do you run an Ethereum node? First of all, you can run it on cloud or on your home PC or your office computer, wherever you want. Of course, with cloud, you have AWS, GCP, Hedgner and our new product, Serium Plus, of course, which makes it very easy to use with Sterium. With ARM, it's a little bit complicated. You could run a full node with Raspberry Pi 4, but it's a little bit slow, so I would not recommend it. If you want to use ARM, I would really recommend the OROC 5B or the Orange Pi 5. It's a much smoother experience, especially on mainnet. With x86 machines, generally you just choose a CPU with a benchmark over 20,000. For some that might sound a lot, but if there are some network issues, then you will be happy to have some more CPU power to actually deal with these issues. 60 gigabytes of memory are, in my opinion, a must to run on mainnet. below that it's it's already a pain two terabyte SSD I want to emphasize SSD here old HDDs they don't work well with with with notes also not with full notes like and especially not with archive notes two terabyte might be a little bit on the short side for the long run, as well as two less for some of the clients. We know that some clients don't prune very well, like delete all old data that they don't need anymore. If you want to be future-proof, then go for 3 or 4 terabytes, that's way better. But 2 terabytes should at least give you a head start and make sure Sorry, wrong button. Okay, then. Thank you very much. Welcome to David. Thank you very much. I'll take your offer. Thank you. Thank you, Stefan. Okay. As this is a beginner's workshop, we now want to go into the whole staking process. We want to walk you step by step through it because we have enough time. And, yeah, so the next point is staking with Serum Setup. So there are four overall steps you have to do to stake yourself. First of all, you have to have 32 ETH, but that you already know. Maybe that will change in the future, but at the moment it's 32. Then you have to create your validator keys with a C-trace. We will show you this today with a tool called Vacu. Then you should do your validator setup, so a full node run with a validator that you can do with STIRRUM, but there are other tools as well. Then afterwards, if you have a running setup, you should load up a validator key with the 32EVE and, of course, always should start with testnet if you're new to this stuff. And the fourth step is then afterwards enjoy the journey. Okay. So I try to emphasize the whole process again in a picture. So you create here the key. Then after you have a running setup, then in that key you give the withdrawal address where the 32EV will be sent back and where the attestation rewards and the syncom media rewards will also be sent in which wallet. So it's kind of safe after you load it up with the 32E, because if you ever exit your validator key, it will only go to that wallet. So, yeah, you're safe afterwards. Then you... Yeah, after that process, after you loaded up the key, you have some time to be... After you've deposited the 32 ETH, you have some time to be approved on mainnet. That's, I think, around seven days. And in the meantime, you can start to validate the client and set the fee recipient address. So that's another possibility to earn rewards. And there you get the fee recipient is a wallet where you get the block production rewards. Okay. So how now to create a validator key? You might be interested. There are different tools we will use today. Vagu. And maybe, yeah, as I will show you, you shouldn't do it because you should do it on an extra machine, best set up only for creating a key with no internet connection whatsoever. But for today, as we do it only for tests, I will show you on that. So, Wagyu is an open source tool I think you can easily find. As I said, if you're a beginner, you should use the testnet for staking. Holesky is really pleasant to use. And then, first of all, you need to create a new recovery phase. And as you see, the tool already warns me that the Internet is connected. So you should really emphasize on that. So you see, it's really easy to do. Just create a secret recovery phase. And then, like every C-Trace, you should write it down, put it in steel so that you can't lose it, and never ever share it with anyone except your wife. Okay. Takes up to 30 seconds or longer. Yeah. Okay, yeah. Could we? Oh, yeah. Someone already asked this. Would it be possible to just the lights in the room to make it a little bit? MARTIN SPLITTMANNKAMPFENGER THROUGH INTERPRETER 1 MARTIN SPLITTMANNKAMPFENGER THROUGH INTERPRETER 2 MARTIN SPLITTMANNKAMPFENGER THROUGH INTERPRETER 3 MARTIN SPLITTMANNKAMPFENGER THROUGH INTERPRETER 4 But maybe that's also securing the C-trace. Okay. Okay. After you have written it down, you have also here the option to copy it into a file. As I said, I wouldn't store it on any digital device. I would really craft it in paper or in steel. But I will copy it now for the ease of the process. Thank you. Thank you. Everybody? Yeah, I wouldn't now go back because then we have to do a next seed phase, but I think from now on we're good. Okay. So then you go next. It really asks you again if you backed it up. I'm sure that I'm lying. And then you have to confirm that you have the secret recovery phase. So this tool is really good. It really makes sure that you're safe. Now you can check it. And you can use your seed phrase for generating more than one key. What's the cool thing is you can also generate further key if you are in need on a later time. Just remember the seed phrase, put it in here again, and then you can say how much keys you already created and the number of much keys you already created and the number of new keys you have. So I set the password. And if you want a withdrawal address, you might want to take your own one. Perfect. Already some Holesky-Eth here. Okay. Take a password that is longer than eight characters. And remember it. Better write it maybe also down. So, and then you're done. Just have to say where to put the files. I will there and create them. And I should have created a folder. Okay. That might take some time. And in the meantime, yeah, we've done the setup. You can also see it in the slides. The QR code is shared, I think, afterwards. So there's the whole tutorial again and we're done with creating the validator key so the next thing is to do the setup the validator setup okay ah yes here no yes so I'm done Here. No? Yes. So I'm done. Yeah, you get two files. The one is the deposit file you will use to load up the validator key. I will show you or walk you through the process as well as there. Yeah, I walk you there. There we will use Launchpad for that later on. Okay, lights are... And now we are starting to use Ethereum and making our node setup. So what you need is a Ubuntu server machine that runs on the newest Ubuntu version, stable version. You might also use other Linux distributions, but it's's not tested so we can't guarantee you anything. So yeah then just give in to the credentials and if you if you give the credentials the first time there's this option to save it with the plus sign and connect. And of course first load down the STIRIUM launcher which you can find on our website or in the GitHub. So let's see.",
  "eventId": "devcon-7",
  "slot_start": 1731465900000,
  "slot_end": 1731471300000,
  "slot_roomId": "classroom-c",
  "resources_presentation": "https://docs.google.com/presentation/d/1pvjBcm_guIMvayHy6vzCMwdxhLF_FviCoXJx10mrzT8",
  "resources_slides": null,
  "speakers": [
    "david-muhlbacher",
    "stefan-kobrc",
    "stereum-team"
  ]
}