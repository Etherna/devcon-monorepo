{
  "id": "efficient-non-native-snark-recursion-using-bivariate-polynomial-testing",
  "sourceId": "E8KYKE",
  "title": "Efficient non-native SNARK recursion using bivariate polynomial testing",
  "description": "Efficient SNARK recursion requires switching between pairing friendly elliptic curves. In most optimal approaches these curves would construct a cycle, but there are no such known cycles. Instead, we use non-native arithmetic to brute force the pairing computation at the cycle cut-off.\r\nWe describe an approach for combining direct field extension with polynomial-based non-native arithmetic. This reduces pairing computation to bivariate polynomial identity testing using Schwartz-Zippel lemma.",
  "track": "Applied Cryptography",
  "type": "Talk",
  "expertise": "Intermediate",
  "audience": "Engineering",
  "featured": false,
  "doNotRecord": false,
  "keywords": [
    "Pairing",
    "based",
    "ZK"
  ],
  "tags": [
    "ZKP",
    "Cryptography",
    "SNARK",
    "zk",
    "based",
    "pairing",
    "Cryptography",
    "SNARK",
    "ZKP"
  ],
  "language": "en",
  "speakers": [
    "ivo-kubjas"
  ],
  "eventId": "devcon-7",
  "slot_start": "2024-11-13T05:00:00.000Z",
  "slot_end": "2024-11-13T05:30:00.000Z",
  "slot_roomId": "stage-3"
}